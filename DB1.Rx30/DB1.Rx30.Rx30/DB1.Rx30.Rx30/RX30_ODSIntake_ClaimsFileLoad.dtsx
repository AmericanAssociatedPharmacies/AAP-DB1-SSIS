<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="4/12/2017 9:53:23 AM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="AAP-N202"
  DTS:CreatorName="AAP\sedwards"
  DTS:DTSID="{325C5041-53EA-40D1-A2B5-F1804157DC93}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="13.0.2165.0"
  DTS:LocaleID="1033"
  DTS:ObjectName="RX30_ODSIntake_ClaimsFileLoad"
  DTS:PackageType="5"
  DTS:VersionBuild="38"
  DTS:VersionGUID="{08D8A196-E5B3-465C-9C7F-72A158D2F275}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:PackageParameters>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{02C55987-FEDD-4D85-999F-5545557625A2}"
      DTS:ObjectName="varFileDir">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">\\db1\c$\Rx30\Staging\</DTS:Property>
    </DTS:PackageParameter>
  </DTS:PackageParameters>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{70037248-A9CF-4B63-9E59-92785B395305}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varFileDir">
      <DTS:VariableValue
        DTS:DataType="8">\\fs1.aap.local\Server\IT Department\RX30\Staging\</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{FBA8838D-8817-478A-9673-8557A6382F6D}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="varStagingFile">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Foreach Loop Container"
      DTS:CreationName="STOCK:FOREACHLOOP"
      DTS:DelayValidation="True"
      DTS:Description="Foreach Loop Container"
      DTS:DTSID="{0F317AB1-C73B-4D80-B2F1-B82CBE8920F5}"
      DTS:ExecutableType="STOCK:FOREACHLOOP"
      DTS:LocaleID="-1"
      DTS:ObjectName="Foreach Loop Container">
      <DTS:ForEachEnumerator
        DTS:CreationName="Microsoft.ForEachFileEnumerator"
        DTS:DTSID="{61DE1F43-12C8-4EAC-BB90-E15C116E18D2}"
        DTS:ObjectName="{61DE1F43-12C8-4EAC-BB90-E15C116E18D2}">
        <DTS:PropertyExpression
          DTS:Name="Directory">@[User::varFileDir]</DTS:PropertyExpression>
        <DTS:ObjectData>
          <ForEachFileEnumeratorProperties>
            <FEFEProperty
              Folder="\\fs1.aap.local\Server\IT Department\RX30\Staging\" />
            <FEFEProperty
              FileSpec="*.csv" />
            <FEFEProperty
              FileNameRetrievalType="0" />
            <FEFEProperty
              Recurse="0" />
          </ForEachFileEnumeratorProperties>
        </DTS:ObjectData>
      </DTS:ForEachEnumerator>
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Data Flow Task"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{2D0910DA-C2AA-4EC5-A9E7-C0AF88ECC9F2}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Data Flow Task"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Foreach Loop Container\Data Flow Task\ErrorOut"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="ErrorOut"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[Error].[ErrorOutput]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Data Flow Task\ErrorOut.Connections[OleDbConnection]"
                      connectionManagerID="{AF686F33-23CD-40F0-BA68-1E1F3A7290FF}:external"
                      connectionManagerRefId="Project.ConnectionManagers[db1.ODSIntake]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Data Flow Task\ErrorOut.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ErrorOut.Inputs[OLE DB Destination Input].Columns[ErrorDateTime]"
                          cachedDataType="dbTimeStamp"
                          cachedName="ErrorDateTime"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\ErrorOut.Inputs[OLE DB Destination Input].ExternalColumns[ErrorDateTime]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[ErrorOut].Columns[ErrorDateTime]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ErrorOut.Inputs[OLE DB Destination Input].Columns[FQNFileName]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="1000"
                          cachedName="FQNFileName"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\ErrorOut.Inputs[OLE DB Destination Input].ExternalColumns[FQNFileName]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[ErrorOut].Columns[FQNFileName]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ErrorOut.Inputs[OLE DB Destination Input].Columns[FileErrorRowNumber]"
                          cachedDataType="i4"
                          cachedName="FileErrorRowNumber"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\ErrorOut.Inputs[OLE DB Destination Input].ExternalColumns[FileErrorRowNumber]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[ErrorOut].Columns[FileErrorRowNumber]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ErrorOut.Inputs[OLE DB Destination Input].Columns[ErrorData]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="8000"
                          cachedName="ErrorData"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\ErrorOut.Inputs[OLE DB Destination Input].ExternalColumns[ErrorData]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[ErrorOut].Columns[ErrorData]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ErrorOut.Inputs[OLE DB Destination Input].Columns[ErrorDescription]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="8000"
                          cachedName="ErrorDescription"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\ErrorOut.Inputs[OLE DB Destination Input].ExternalColumns[ErrorDescription]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[ErrorOut].Columns[ErrorDescription]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ErrorOut.Inputs[OLE DB Destination Input].ExternalColumns[RowID]"
                          dataType="i4"
                          name="RowID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ErrorOut.Inputs[OLE DB Destination Input].ExternalColumns[ErrorDateTime]"
                          dataType="dbTimeStamp"
                          name="ErrorDateTime" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ErrorOut.Inputs[OLE DB Destination Input].ExternalColumns[FQNFileName]"
                          codePage="1252"
                          dataType="str"
                          length="1000"
                          name="FQNFileName" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ErrorOut.Inputs[OLE DB Destination Input].ExternalColumns[FileErrorRowNumber]"
                          dataType="i4"
                          name="FileErrorRowNumber" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ErrorOut.Inputs[OLE DB Destination Input].ExternalColumns[ErrorData]"
                          codePage="1252"
                          dataType="str"
                          length="8000"
                          name="ErrorData" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ErrorOut.Inputs[OLE DB Destination Input].ExternalColumns[ErrorDescription]"
                          codePage="1252"
                          dataType="str"
                          length="8000"
                          name="ErrorDescription" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ErrorOut.Inputs[OLE DB Destination Input].ExternalColumns[RowCreatedDate]"
                          dataType="dbTimeStamp"
                          name="RowCreatedDate" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\ErrorOut.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Data Flow Task\ErrorOut.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ErrorOut.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ErrorOut.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ErrorOut.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ErrorOut.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="OLE DB Destination"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[Staging].[Rx30Claims]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Connections[OleDbConnection]"
                      connectionManagerID="{AF686F33-23CD-40F0-BA68-1E1F3A7290FF}:external"
                      connectionManagerRefId="Project.ConnectionManagers[db1.ODSIntake]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[PharmID]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="PharmID"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[PharmID]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[PharmID]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[BINNbr]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="BINNbr"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[BINNbr]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[BINNbr]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[PCN]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="PCN"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[PCN]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[PCN]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[GroupNbr]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="GroupNbr"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[GroupNbr]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[GroupNbr]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Submitted]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="Submitted"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Submitted]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[Submitted]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[RxDate]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="RxDate"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[RxDate]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[RxDate]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[QtyDispensed]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="QtyDispensed"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[QtyDispensed]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[QtyDispensed]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[DaySupply]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="DaySupply"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[DaySupply]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[DaySupply]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[NDCDispensed]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="NDCDispensed"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[NDCDispensed]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[NDCDispensed]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[FeeSubmitted]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="FeeSubmitted"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[FeeSubmitted]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[FeeSubmitted]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[CostSubmitted]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="CostSubmitted"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[CostSubmitted]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[CostSubmitted]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[FeePaid]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="FeePaid"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[FeePaid]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[FeePaid]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[CostPaid]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="CostPaid"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[CostPaid]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[CostPaid]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[PlanAmount]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="PlanAmount"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[PlanAmount]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[PlanAmount]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[CoPayAmount]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="CoPayAmount"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[CoPayAmount]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[CoPayAmount]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[UandC]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="UandC"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[UandC]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[UandC]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[TotalPrice]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="TotalPrice"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[TotalPrice]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[TotalPrice]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[BS]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="BS"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[BS]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[BS]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[BR]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="BR"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[BR]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[BR]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[OI]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="OI"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[OI]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[OI]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[DAW]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="DAW"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[DAW]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[DAW]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[DAWDesc]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="DAWDesc"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[DAWDesc]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[DAWDesc]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[PatientPaid]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="PatientPaid"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[PatientPaid]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[PatientPaid]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[GrossAmtDue]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="GrossAmtDue"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[GrossAmtDue]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[GrossAmtDue]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[PlanID]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="PlanID"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[PlanID]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[PlanID]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[RejCode]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="RejCode"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[RejCode]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[RejCode]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[MessageResponse]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="MessageResponse"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[MessageResponse]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[MessageResponse]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[TxResponse]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="TxResponse"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[TxResponse]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[TxResponse]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[RxNbr]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="RxNbr"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[RxNbr]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[RxNbr]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[RfNbr]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="RfNbr"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[RfNbr]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[RfNbr]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[PID]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="PID"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[PID]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[PID]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[DoctorName]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="DoctorName"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[DoctorName]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[DoctorName]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[RA]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="RA"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[RA]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[RA]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[NDCWritten]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="NDCWritten"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[NDCWritten]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[NDCWritten]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[OtherAmount]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="OtherAmount"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[OtherAmount]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[OtherAmount]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[TYPE]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="TYPE"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[TYPE]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[TYPE]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Rx30Lic]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="Rx30Lic"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Rx30Lic]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[Rx30Lic]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Compound]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="Compound"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Compound]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[Compound]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[NetworkReimbID]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="NetworkReimbID"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[NetworkReimbID]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[NetworkReimbID]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[PatientKey]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="PatientKey"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[PatientKey]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[PatientKey]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[PatientName]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="PatientName"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[PatientName]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[PatientName]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[PatLocationCode]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="PatLocationCode"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[PatLocationCode]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[PatLocationCode]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[CardholderID]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="CardholderID"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[CardholderID]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[CardholderID]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[PatientCity]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="PatientCity"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[PatientCity]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[PatientCity]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[PatientState]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="PatientState"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[PatientState]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[PatientState]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[PatientZip]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="PatientZip"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[PatientZip]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[PatientZip]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[PatientPhone]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="PatientPhone"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[PatientPhone]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[PatientPhone]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Birthdate]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="Birthdate"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Birthdate]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[Birthdate]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Gender]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="Gender"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Gender]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[Gender]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[PrescriberPhone]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="PrescriberPhone"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[PrescriberPhone]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[PrescriberPhone]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[RxSource]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="RxSource"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[RxSource]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[RxSource]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[DRDEA]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="DRDEA"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[DRDEA]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[DRDEA]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[UnitAWP]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="UnitAWP"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[UnitAWP]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[UnitAWP]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[PatientLastName]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="PatientLastName"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[PatientLastName]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[PatientLastName]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[PatientFirstName]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="PatientFirstName"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[PatientFirstName]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[PatientFirstName]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[PatientMiddleName]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="PatientMiddleName"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[PatientMiddleName]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[PatientMiddleName]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[FlatTaxPaid]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="FlatTaxPaid"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[FlatTaxPaid]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[FlatTaxPaid]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[PCTTaxPaid]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="PCTTaxPaid"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[PCTTaxPaid]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[PCTTaxPaid]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[PCTTaxRate]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="PCTTaxRate"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[PCTTaxRate]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[PCTTaxRate]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[PCTTaxBasis]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="PCTTaxBasis"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[PCTTaxBasis]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[PCTTaxBasis]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[ProfFeePaid]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="ProfFeePaid"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ProfFeePaid]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[ProfFeePaid]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[PrescriberNPI]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="PrescriberNPI"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[PrescriberNPI]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[PrescriberNPI]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[RxDiscount]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="RxDiscount"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[RxDiscount]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[RxDiscount]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[ClaimAuthNumber]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="ClaimAuthNumber"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ClaimAuthNumber]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[ClaimAuthNumber]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[FileDir]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="1000"
                          cachedName="FileDir"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[FileProcessed]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[FileDir]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[PIDQ]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="PIDQ"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[PID_Q]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[PIDQ]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[PatientAddress]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="PatientAddress"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Patient Address]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[PatientAddress]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[IncentiveFeePaid]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="IncentiveFeePaid"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[IncentiveFePaid]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[IncentiveFeePaid]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[FileRowID]"
                          cachedDataType="i4"
                          cachedName="FileRowID"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[FileRowID]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[FileRowID]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[RowCreatedDate]"
                          cachedDataType="dbTimeStamp"
                          cachedName="RowCreatedDate"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[RowCreatedDate]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[RowCreatedDate]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[RowID]"
                          dataType="i4"
                          name="RowID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[PharmID]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="PharmID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[BINNbr]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="BINNbr" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[PCN]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="PCN" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[GroupNbr]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="GroupNbr" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Submitted]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="Submitted" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[RxDate]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="RxDate" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[QtyDispensed]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="QtyDispensed" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[DaySupply]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="DaySupply" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[NDCDispensed]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="NDCDispensed" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[FeeSubmitted]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="FeeSubmitted" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[CostSubmitted]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="CostSubmitted" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[FeePaid]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="FeePaid" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[CostPaid]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="CostPaid" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[PlanAmount]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="PlanAmount" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[CoPayAmount]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="CoPayAmount" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[UandC]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="UandC" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[TotalPrice]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="TotalPrice" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[BS]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="BS" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[BR]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="BR" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[OI]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="OI" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[DAW]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="DAW" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[DAWDesc]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="DAWDesc" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[PatientPaid]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="PatientPaid" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[GrossAmtDue]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="GrossAmtDue" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[PlanID]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="PlanID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[RejCode]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="RejCode" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[MessageResponse]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="MessageResponse" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[TxResponse]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="TxResponse" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[RxNbr]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="RxNbr" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[RfNbr]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="RfNbr" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[PID_Q]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="PID_Q" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[PID]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="PID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[DoctorName]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="DoctorName" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[RA]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="RA" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[NDCWritten]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="NDCWritten" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[OtherAmount]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="OtherAmount" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[TYPE]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="TYPE" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Rx30Lic]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="Rx30Lic" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Compound]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="Compound" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[NetworkReimbID]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="NetworkReimbID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[PatientKey]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="PatientKey" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[PatientName]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="PatientName" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[PatLocationCode]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="PatLocationCode" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[CardholderID]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="CardholderID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Patient Address]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="Patient Address" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[PatientCity]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="PatientCity" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[PatientState]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="PatientState" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[PatientZip]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="PatientZip" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[PatientPhone]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="PatientPhone" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Birthdate]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="Birthdate" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Gender]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="Gender" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[PrescriberPhone]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="PrescriberPhone" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[RxSource]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="RxSource" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[DRDEA]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="DRDEA" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[UnitAWP]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="UnitAWP" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[PatientLastName]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="PatientLastName" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[PatientFirstName]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="PatientFirstName" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[PatientMiddleName]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="PatientMiddleName" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[FlatTaxPaid]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="FlatTaxPaid" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[PCTTaxPaid]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="PCTTaxPaid" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[PCTTaxRate]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="PCTTaxRate" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[PCTTaxBasis]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="PCTTaxBasis" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[IncentiveFePaid]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="IncentiveFePaid" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ProfFeePaid]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="ProfFeePaid" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[PrescriberNPI]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="PrescriberNPI" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[RxDiscount]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="RxDiscount" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ClaimAuthNumber]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="ClaimAuthNumber" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[FileProcessed]"
                          codePage="1252"
                          dataType="str"
                          length="1000"
                          name="FileProcessed" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[FileRowID]"
                          dataType="i4"
                          name="FileRowID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[RowCreatedDate]"
                          dataType="dbTimeStamp"
                          name="RowCreatedDate" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;8"
                  description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                  name="ParseFlatFile"
                  version="10">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="30">
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public Rx30OutBuffer Rx30OutBuffer;

    public ErrorOutBuffer ErrorOutBuffer;

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != Rx30OutBuffer)
        {
            Rx30OutBuffer.SetEndOfRowset();
            Rx30OutBuffer = null;
        }

        if (null != ErrorOutBuffer)
        {
            ErrorOutBuffer.SetEndOfRowset();
            ErrorOutBuffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Rx30Out"))
            {
                Rx30OutBuffer = new Rx30OutBuffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"ErrorOut"))
            {
                ErrorOutBuffer = new ErrorOutBuffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

        FinishOutputs();
        MarkOutputsFinished();

    }

    public virtual void CreateNewOutputRows()
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public String varStagingFile
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["varStagingFile"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
using Microsoft.SqlServer.Dts.Runtime;
using System.IO;
using System.Text.RegularExpressions;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{

    enum col
    {
        PharmID = 0,
        BINNbr,
        PCN,
        GroupNbr,
        Submitted,
        RxDate,
        QtyDispensed,
        DaySupply,
        NDCDispensed,
        FeeSubmitted,
        CostSubmitted,
        FeePaid,
        CostPaid,
        PlanAmount,
        CoPayAmount,
        UandC,
        TotalPrice,
        BS,
        BR,
        OI,
        DAW,
        DAWDesc,
        PatientPaid,
        GrossAmtDue,
        PlanID,
        RejCode,
        MessageResponse,
        TxResponse,
        RxNbr,
        RfNbr,
        PIDQ,
        PID,
        DoctorName,
        RA,
        NDCWritten,
        OtherAmount,
        TYPE,
        Rx30Lic,
        Compound,
        NetworkReimbID,
        PatientKey,
        PatientName,
        PatLocationCode,
        CardholderID,
        PatientAddress,
        PatientCity,
        PatientState,
        PatientZip,
        PatientPhone,
        Birthdate,
        Gender,
        PrescriberPhone,
        RxSource,
        DRDEA,
        UnitAWP,
        PatientLastName,
        PatientFirstName,
        PatientMiddleName,
        FlatTaxPaid,
        PCTTaxPaid,
        PCTTaxRate,
        PCTTaxBasis,
        IncentiveFeePaid,
        ProfFeePaid,
        PrescriberNPI,
        RxDiscount,
        ClaimAuthNumber,

        MaxCols
    };

    public override void PreExecute()
    {
        base.PreExecute();
        /*
          Add your code here for preprocessing or remove if not needed
        */
    }

    public override void PostExecute()
    {
        base.PostExecute();
        /*
          Add your code here for postprocessing or remove if not needed
          You can set read/write variables here, for example:
          Variables.MyIntVar = 100
        */
    }


    private string left(string inString, int inInt)
    {
        inString = inString.Trim();

        if (inInt > inString.Length)
            inInt = inString.Length;

        return inString.Substring(0, inInt);
    }

    private void WriteError(DateTime dt, string fn, Int32 rc, string ErrRow, string ErrDesc)
    {

        ErrorOutBuffer.AddRow();
        ErrorOutBuffer.ErrorDateTime = dt;
        ErrorOutBuffer.FQNFileName = fn;
        ErrorOutBuffer.FileErrorRowNumber = rc;
        ErrorOutBuffer.ErrorData = ErrRow;
        ErrorOutBuffer.ErrorDescription = ErrDesc;

    }

    private bool NonPrintableChars(string inp)
    {
        //Regex reg = new Regex("[^A-Za-z0-9_]");
        Regex reg = new Regex("[\x00-\x1f]");
        return (reg.IsMatch(inp));
    }



    public override void CreateNewOutputRows()
    {
        //    /*
        //      Add rows by calling the AddRow method on the member variable named "<Output Name>Buffer".
        //      For example, call MyOutputBuffer.AddRow() if your output was named "MyOutput".
        //    */

        string inpFileNameAndPath = Variables.varStagingFile.ToString();
        string inp;
        string[] x;
        char[] delimiterChars = {'|'};
        int MinCols = ((int)col.MaxCols) - 1;
        Int32 RowCount = -1;
        Int32 FileRowID = 0;
        string strfiledir;

        strfiledir = inpFileNameAndPath.ToString();
        
        using (StreamReader sr = new StreamReader(inpFileNameAndPath))
        { 
            while ((inp = sr.ReadLine()) != null)

            try
            {
                
                {
                    RowCount++;
                    FileRowID++;

                    //Get rid of double and greater white spaces
                    //inp = inp.Replace("  ", " ").Replace("   ", " ").Trim().ToString();

                    // Split the inp into the array;
                    x = inp.Split(delimiterChars);

                    // Check for errors.

                    // Non-printable characters
                    if (NonPrintableChars(inp.Replace("\t", "")) == true)
                    {
                        DateTime ErrorFileDate = DateTime.Now;

                        WriteError(ErrorFileDate, inpFileNameAndPath, RowCount, inp, "Nonprintable data found in the row.");
                        continue;
                    }


                    // Too few columns
                    if (x.GetLength(0) < MinCols)
                    {
                        DateTime ErrorFileDate = DateTime.Now;

                        WriteError(ErrorFileDate, inpFileNameAndPath, RowCount, inp, "Not enough columns in row");
                        continue;
                    }

                    //int DateKey = int.Parse(DateTime.Now.ToString("yyyyMMdd"));

                    {
                        //This will skip over the column name row
                        if (RowCount > 0)
                        {

                            // Map this to our output variables.
                            Rx30OutBuffer.AddRow();

                            Rx30OutBuffer.FileRowID = FileRowID;
                            Rx30OutBuffer.PharmID = left(x[(int)col.PharmID].Replace("  ", " ").Replace("   ", " ").Trim().ToString(), 500);
                            Rx30OutBuffer.BINNbr = left(x[(int)col.BINNbr].Replace("  ", " ").Replace("   ", " ").Trim().ToString(), 500);
                            Rx30OutBuffer.PCN = left(x[(int)col.PCN].Replace("  ", " ").Replace("   ", " ").Trim().ToString(), 500);
                            Rx30OutBuffer.GroupNbr = left(x[(int)col.GroupNbr].Replace("  ", " ").Replace("   ", " ").Trim().ToString(), 500);
                            Rx30OutBuffer.Submitted = left(x[(int)col.Submitted].Replace("  ", " ").Replace("   ", " ").Trim().ToString(), 500);
                            Rx30OutBuffer.RxDate = left(x[(int)col.RxDate].Replace("  ", " ").Replace("   ", " ").Trim().ToString(), 500);
                            Rx30OutBuffer.QtyDispensed = left(x[(int)col.QtyDispensed].Replace("  ", " ").Replace("   ", " ").Trim().ToString(), 500);
                            Rx30OutBuffer.DaySupply = left(x[(int)col.DaySupply].Replace("  ", " ").Replace("   ", " ").Trim().ToString(), 500);
                            Rx30OutBuffer.NDCDispensed = left(x[(int)col.NDCDispensed].Replace("  ", " ").Replace("   ", " ").Trim().ToString(), 500);
                            Rx30OutBuffer.FeeSubmitted = left(x[(int)col.FeeSubmitted].Replace("  ", " ").Replace("   ", " ").Trim().ToString(), 500);
                            Rx30OutBuffer.CostSubmitted = left(x[(int)col.CostSubmitted].Replace("  ", " ").Replace("   ", " ").Trim().ToString(), 500);
                            Rx30OutBuffer.FeePaid = left(x[(int)col.FeePaid].Replace("  ", " ").Replace("   ", " ").Trim().ToString(), 500);
                            Rx30OutBuffer.CostPaid = left(x[(int)col.CostPaid].Replace("  ", " ").Replace("   ", " ").Trim().ToString(), 500);
                            Rx30OutBuffer.PlanAmount = left(x[(int)col.PlanAmount].Replace("  ", " ").Replace("   ", " ").Trim().ToString(), 500);
                            Rx30OutBuffer.CoPayAmount = left(x[(int)col.CoPayAmount].Replace("  ", " ").Replace("   ", " ").Trim().ToString(), 500);
                            Rx30OutBuffer.UandC = left(x[(int)col.UandC].Replace("  ", " ").Replace("   ", " ").Trim().ToString(), 500);
                            Rx30OutBuffer.TotalPrice = left(x[(int)col.TotalPrice].Replace("  ", " ").Replace("   ", " ").Trim().ToString(), 500);
                            Rx30OutBuffer.BS = left(x[(int)col.BS].Replace("  ", " ").Replace("   ", " ").Trim().ToString(), 500);
                            Rx30OutBuffer.BR = left(x[(int)col.BR].Replace("  ", " ").Replace("   ", " ").Trim().ToString(), 500);
                            Rx30OutBuffer.OI = left(x[(int)col.OI].Replace("  ", " ").Replace("   ", " ").Trim().ToString(), 500);
                            Rx30OutBuffer.DAW = left(x[(int)col.DAW].Replace("  ", " ").Replace("   ", " ").Trim().ToString(), 500);
                            Rx30OutBuffer.DAWDesc = left(x[(int)col.DAWDesc].Replace("  ", " ").Replace("   ", " ").Trim().ToString(), 500);
                            Rx30OutBuffer.PatientPaid = left(x[(int)col.PatientPaid].Replace("  ", " ").Replace("   ", " ").Trim().ToString(), 500);
                            Rx30OutBuffer.GrossAmtDue = left(x[(int)col.GrossAmtDue].Replace("  ", " ").Replace("   ", " ").Trim().ToString(), 500);
                            Rx30OutBuffer.PlanID = left(x[(int)col.PlanID].Replace("  ", " ").Replace("   ", " ").Trim().ToString(), 500);
                            Rx30OutBuffer.RejCode = left(x[(int)col.RejCode].Replace("  ", " ").Replace("   ", " ").Trim().ToString(), 500);
                            Rx30OutBuffer.MessageResponse = left(x[(int)col.MessageResponse].Replace("  ", " ").Replace("   ", " ").Trim().ToString(), 500);
                            Rx30OutBuffer.TxResponse = left(x[(int)col.TxResponse].Replace("  ", " ").Replace("   ", " ").Trim().ToString(), 500);
                            Rx30OutBuffer.RxNbr = left(x[(int)col.RxNbr].Replace("  ", " ").Replace("   ", " ").Trim().ToString(), 500);
                            Rx30OutBuffer.RfNbr = left(x[(int)col.RfNbr].Replace("  ", " ").Replace("   ", " ").Trim().ToString(), 500);
                            Rx30OutBuffer.PIDQ = left(x[(int)col.PIDQ].Replace("  ", " ").Replace("   ", " ").Trim().ToString(), 500);
                            Rx30OutBuffer.PID = left(x[(int)col.PID].Replace("  ", " ").Replace("   ", " ").Trim().ToString(), 500);
                            Rx30OutBuffer.DoctorName = left(x[(int)col.DoctorName].Replace("  ", " ").Replace("   ", " ").Trim().ToString(), 500);
                            Rx30OutBuffer.RA = left(x[(int)col.RA].Replace("  ", " ").Replace("   ", " ").Trim().ToString(), 500);
                            Rx30OutBuffer.NDCWritten = left(x[(int)col.NDCWritten].Replace("  ", " ").Replace("   ", " ").Trim().ToString(), 500);
                            Rx30OutBuffer.OtherAmount = left(x[(int)col.OtherAmount].Replace("  ", " ").Replace("   ", " ").Trim().ToString(), 500);
                            Rx30OutBuffer.TYPE = left(x[(int)col.TYPE].Replace("  ", " ").Replace("   ", " ").Trim().ToString(), 500);
                            Rx30OutBuffer.Rx30Lic = left(x[(int)col.Rx30Lic].Replace("  ", " ").Replace("   ", " ").Trim().ToString(), 500);
                            Rx30OutBuffer.Compound = left(x[(int)col.Compound].Replace("  ", " ").Replace("   ", " ").Trim().ToString(), 500);
                            Rx30OutBuffer.NetworkReimbID = left(x[(int)col.NetworkReimbID].Replace("  ", " ").Replace("   ", " ").Trim().ToString(), 500);
                            Rx30OutBuffer.PatientKey = left(x[(int)col.PatientKey].Replace("  ", " ").Replace("   ", " ").Trim().ToString(), 500);
                            Rx30OutBuffer.PatientName = left(x[(int)col.PatientName].Replace("  ", " ").Replace("   ", " ").Trim().ToString(), 500);
                            Rx30OutBuffer.PatLocationCode = left(x[(int)col.PatLocationCode].Replace("  ", " ").Replace("   ", " ").Trim().ToString(), 500);
                            Rx30OutBuffer.CardholderID = left(x[(int)col.CardholderID].Replace("  ", " ").Replace("   ", " ").Trim().ToString(), 500);
                            Rx30OutBuffer.PatientAddress = left(x[(int)col.PatientAddress].Replace("  ", " ").Replace("   ", " ").Trim().ToString(), 500);
                            Rx30OutBuffer.PatientCity = left(x[(int)col.PatientCity].Replace("  ", " ").Replace("   ", " ").Trim().ToString(), 500);
                            Rx30OutBuffer.PatientState = left(x[(int)col.PatientState].Replace("  ", " ").Replace("   ", " ").Trim().ToString(), 500);
                            Rx30OutBuffer.PatientZip = left(x[(int)col.PatientZip].Replace("  ", " ").Replace("   ", " ").Trim().ToString(), 500);
                            Rx30OutBuffer.PatientPhone = left(x[(int)col.PatientPhone].Replace("  ", " ").Replace("   ", " ").Trim().ToString(), 500);
                            Rx30OutBuffer.Birthdate = left(x[(int)col.Birthdate].Replace("  ", " ").Replace("   ", " ").Trim().ToString(), 500);
                            Rx30OutBuffer.Gender = left(x[(int)col.Gender].Replace("  ", " ").Replace("   ", " ").Trim().ToString(), 500);
                            Rx30OutBuffer.PrescriberPhone = left(x[(int)col.PrescriberPhone].Replace("  ", " ").Replace("   ", " ").Trim().ToString(), 500);
                            Rx30OutBuffer.RxSource = left(x[(int)col.RxSource].Replace("  ", " ").Replace("   ", " ").Trim().ToString(), 500);
                            Rx30OutBuffer.DRDEA = left(x[(int)col.DRDEA].Replace("  ", " ").Replace("   ", " ").Trim().ToString(), 500);
                            Rx30OutBuffer.UnitAWP = left(x[(int)col.UnitAWP].Replace("  ", " ").Replace("   ", " ").Trim().ToString(), 500);
                            Rx30OutBuffer.PatientLastName = left(x[(int)col.PatientLastName].Replace("  ", " ").Replace("   ", " ").Trim().ToString(), 500);
                            Rx30OutBuffer.PatientFirstName = left(x[(int)col.PatientFirstName].Replace("  ", " ").Replace("   ", " ").Trim().ToString(), 500);
                            Rx30OutBuffer.PatientMiddleName = left(x[(int)col.PatientMiddleName].Replace("  ", " ").Replace("   ", " ").Trim().ToString(), 500);
                            Rx30OutBuffer.FlatTaxPaid = left(x[(int)col.FlatTaxPaid].Replace("  ", " ").Replace("   ", " ").Trim().ToString(), 500);
                            Rx30OutBuffer.PCTTaxPaid = left(x[(int)col.PCTTaxPaid].Replace("  ", " ").Replace("   ", " ").Trim().ToString(), 500);
                            Rx30OutBuffer.PCTTaxRate = left(x[(int)col.PCTTaxRate].Replace("  ", " ").Replace("   ", " ").Trim().ToString(), 500);
                            Rx30OutBuffer.PCTTaxBasis = left(x[(int)col.PCTTaxBasis].Replace("  ", " ").Replace("   ", " ").Trim().ToString(), 500);
                            Rx30OutBuffer.IncentiveFeePaid = left(x[(int)col.IncentiveFeePaid].Replace("  ", " ").Replace("   ", " ").Trim().ToString(), 500);
                            Rx30OutBuffer.ProfFeePaid = left(x[(int)col.ProfFeePaid].Replace("  ", " ").Replace("   ", " ").Trim().ToString(), 500);
                            Rx30OutBuffer.PrescriberNPI = left(x[(int)col.PrescriberNPI].Replace("  ", " ").Replace("   ", " ").Trim().ToString(), 500);
                            Rx30OutBuffer.RxDiscount = left(x[(int)col.RxDiscount].Replace("  ", " ").Replace("   ", " ").Trim().ToString(), 500);
                            Rx30OutBuffer.ClaimAuthNumber = left(x[(int)col.ClaimAuthNumber].Replace("  ", " ").Replace("   ", " ").Trim().ToString(), 500);
                            Rx30OutBuffer.FileDir = strfiledir.ToString();
                            Rx30OutBuffer.RowCreatedDate = DateTime.Now;

                        }

                    }
                }
                
            }
          
            catch (Exception ex)

                    {

                      DateTime  ErrorFileDate = DateTime.Now;
                
                        WriteError(ErrorFileDate, inpFileNameAndPath, FileRowID, inp, ex.ToString());
                        continue;                    
                    
                    
                    }
            }

    }
}

]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Rx30OutBuffer: ScriptBuffer

{
    public Rx30OutBuffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Int32 FileRowID
    {
        set
        {
            this[0] = value;
        }
    }
    public bool FileRowID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String PharmID
    {
        set
        {
            this[1] = value;
        }
    }
    public bool PharmID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String BINNbr
    {
        set
        {
            this[2] = value;
        }
    }
    public bool BINNbr_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String PCN
    {
        set
        {
            this[3] = value;
        }
    }
    public bool PCN_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String GroupNbr
    {
        set
        {
            this[4] = value;
        }
    }
    public bool GroupNbr_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Submitted
    {
        set
        {
            this[5] = value;
        }
    }
    public bool Submitted_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String RxDate
    {
        set
        {
            this[6] = value;
        }
    }
    public bool RxDate_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(6);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String QtyDispensed
    {
        set
        {
            this[7] = value;
        }
    }
    public bool QtyDispensed_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(7);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String DaySupply
    {
        set
        {
            this[8] = value;
        }
    }
    public bool DaySupply_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(8);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String NDCDispensed
    {
        set
        {
            this[9] = value;
        }
    }
    public bool NDCDispensed_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(9);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String FeeSubmitted
    {
        set
        {
            this[10] = value;
        }
    }
    public bool FeeSubmitted_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(10);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String CostSubmitted
    {
        set
        {
            this[11] = value;
        }
    }
    public bool CostSubmitted_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(11);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String FeePaid
    {
        set
        {
            this[12] = value;
        }
    }
    public bool FeePaid_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(12);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String CostPaid
    {
        set
        {
            this[13] = value;
        }
    }
    public bool CostPaid_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(13);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String PlanAmount
    {
        set
        {
            this[14] = value;
        }
    }
    public bool PlanAmount_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(14);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String CoPayAmount
    {
        set
        {
            this[15] = value;
        }
    }
    public bool CoPayAmount_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(15);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String UandC
    {
        set
        {
            this[16] = value;
        }
    }
    public bool UandC_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(16);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String TotalPrice
    {
        set
        {
            this[17] = value;
        }
    }
    public bool TotalPrice_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(17);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String BS
    {
        set
        {
            this[18] = value;
        }
    }
    public bool BS_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(18);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String BR
    {
        set
        {
            this[19] = value;
        }
    }
    public bool BR_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(19);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String OI
    {
        set
        {
            this[20] = value;
        }
    }
    public bool OI_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(20);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String DAW
    {
        set
        {
            this[21] = value;
        }
    }
    public bool DAW_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(21);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String DAWDesc
    {
        set
        {
            this[22] = value;
        }
    }
    public bool DAWDesc_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(22);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String PatientPaid
    {
        set
        {
            this[23] = value;
        }
    }
    public bool PatientPaid_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(23);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String GrossAmtDue
    {
        set
        {
            this[24] = value;
        }
    }
    public bool GrossAmtDue_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(24);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String PlanID
    {
        set
        {
            this[25] = value;
        }
    }
    public bool PlanID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(25);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String RejCode
    {
        set
        {
            this[26] = value;
        }
    }
    public bool RejCode_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(26);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String MessageResponse
    {
        set
        {
            this[27] = value;
        }
    }
    public bool MessageResponse_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(27);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String TxResponse
    {
        set
        {
            this[28] = value;
        }
    }
    public bool TxResponse_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(28);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String RxNbr
    {
        set
        {
            this[29] = value;
        }
    }
    public bool RxNbr_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(29);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String RfNbr
    {
        set
        {
            this[30] = value;
        }
    }
    public bool RfNbr_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(30);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String PIDQ
    {
        set
        {
            this[31] = value;
        }
    }
    public bool PIDQ_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(31);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String PID
    {
        set
        {
            this[32] = value;
        }
    }
    public bool PID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(32);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String DoctorName
    {
        set
        {
            this[33] = value;
        }
    }
    public bool DoctorName_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(33);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String RA
    {
        set
        {
            this[34] = value;
        }
    }
    public bool RA_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(34);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String NDCWritten
    {
        set
        {
            this[35] = value;
        }
    }
    public bool NDCWritten_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(35);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String OtherAmount
    {
        set
        {
            this[36] = value;
        }
    }
    public bool OtherAmount_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(36);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String TYPE
    {
        set
        {
            this[37] = value;
        }
    }
    public bool TYPE_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(37);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Rx30Lic
    {
        set
        {
            this[38] = value;
        }
    }
    public bool Rx30Lic_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(38);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Compound
    {
        set
        {
            this[39] = value;
        }
    }
    public bool Compound_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(39);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String NetworkReimbID
    {
        set
        {
            this[40] = value;
        }
    }
    public bool NetworkReimbID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(40);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String PatientKey
    {
        set
        {
            this[41] = value;
        }
    }
    public bool PatientKey_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(41);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String PatientName
    {
        set
        {
            this[42] = value;
        }
    }
    public bool PatientName_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(42);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String PatLocationCode
    {
        set
        {
            this[43] = value;
        }
    }
    public bool PatLocationCode_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(43);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String CardholderID
    {
        set
        {
            this[44] = value;
        }
    }
    public bool CardholderID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(44);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String PatientAddress
    {
        set
        {
            this[45] = value;
        }
    }
    public bool PatientAddress_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(45);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String PatientCity
    {
        set
        {
            this[46] = value;
        }
    }
    public bool PatientCity_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(46);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String PatientState
    {
        set
        {
            this[47] = value;
        }
    }
    public bool PatientState_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(47);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String PatientZip
    {
        set
        {
            this[48] = value;
        }
    }
    public bool PatientZip_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(48);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String PatientPhone
    {
        set
        {
            this[49] = value;
        }
    }
    public bool PatientPhone_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(49);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Birthdate
    {
        set
        {
            this[50] = value;
        }
    }
    public bool Birthdate_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(50);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Gender
    {
        set
        {
            this[51] = value;
        }
    }
    public bool Gender_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(51);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String PrescriberPhone
    {
        set
        {
            this[52] = value;
        }
    }
    public bool PrescriberPhone_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(52);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String RxSource
    {
        set
        {
            this[53] = value;
        }
    }
    public bool RxSource_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(53);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String DRDEA
    {
        set
        {
            this[54] = value;
        }
    }
    public bool DRDEA_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(54);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String UnitAWP
    {
        set
        {
            this[55] = value;
        }
    }
    public bool UnitAWP_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(55);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String PatientLastName
    {
        set
        {
            this[56] = value;
        }
    }
    public bool PatientLastName_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(56);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String PatientFirstName
    {
        set
        {
            this[57] = value;
        }
    }
    public bool PatientFirstName_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(57);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String PatientMiddleName
    {
        set
        {
            this[58] = value;
        }
    }
    public bool PatientMiddleName_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(58);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String FlatTaxPaid
    {
        set
        {
            this[59] = value;
        }
    }
    public bool FlatTaxPaid_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(59);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String PCTTaxPaid
    {
        set
        {
            this[60] = value;
        }
    }
    public bool PCTTaxPaid_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(60);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String PCTTaxRate
    {
        set
        {
            this[61] = value;
        }
    }
    public bool PCTTaxRate_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(61);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String PCTTaxBasis
    {
        set
        {
            this[62] = value;
        }
    }
    public bool PCTTaxBasis_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(62);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String IncentiveFeePaid
    {
        set
        {
            this[63] = value;
        }
    }
    public bool IncentiveFeePaid_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(63);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ProfFeePaid
    {
        set
        {
            this[64] = value;
        }
    }
    public bool ProfFeePaid_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(64);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String PrescriberNPI
    {
        set
        {
            this[65] = value;
        }
    }
    public bool PrescriberNPI_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(65);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String RxDiscount
    {
        set
        {
            this[66] = value;
        }
    }
    public bool RxDiscount_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(66);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ClaimAuthNumber
    {
        set
        {
            this[67] = value;
        }
    }
    public bool ClaimAuthNumber_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(67);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String FileDir
    {
        set
        {
            this[68] = value;
        }
    }
    public bool FileDir_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(68);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public DateTime RowCreatedDate
    {
        set
        {
            this[69] = value;
        }
    }
    public bool RowCreatedDate_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(69);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}

public class ErrorOutBuffer: ScriptBuffer

{
    public ErrorOutBuffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public DateTime ErrorDateTime
    {
        set
        {
            this[0] = value;
        }
    }
    public bool ErrorDateTime_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String FQNFileName
    {
        set
        {
            this[1] = value;
        }
    }
    public bool FQNFileName_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 FileErrorRowNumber
    {
        set
        {
            this[2] = value;
        }
    }
    public bool FileErrorRowNumber_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ErrorData
    {
        set
        {
            this[3] = value;
        }
    }
    public bool ErrorData_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ErrorDescription
    {
        set
        {
            this[4] = value;
        }
    }
    public bool ErrorDescription_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public DateTime RowCreatedDate
    {
        set
        {
            this[5] = value;
        }
    }
    public bool RowCreatedDate_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_0bf11d85736748cc88c918f84be77cc9.Properties.Settings.get_Default():SC_0bf11d85736748cc88c918f84be77cc9.Properties.Sett" +
    "ings")]

namespace SC_0bf11d85736748cc88c918f84be77cc9.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_0bf11d85736748cc88c918f84be77cc9.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{CDFD559B-3F9E-41CC-9DA7-3DF2DB7E84C7}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_0bf11d85736748cc88c918f84be77cc9</RootNamespace>
    <AssemblyName>SC_0bf11d85736748cc88c918f84be77cc9</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=13.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=13.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=13.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=13.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>SC_0bf11d85736748cc88c918f84be77cc9</msb:CodeName>
		<msb:DisplayName>SC_0bf11d85736748cc88c918f84be77cc9</msb:DisplayName>
		<msb:ProjectId>{B8D60173-8497-481D-9638-4082EFBCFF9A}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_0bf11d85736748cc88c918f84be77cc9.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_0bf11d85736748cc88c918f84be77cc9")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_0bf11d85736748cc88c918f84be77cc9")]
[assembly: AssemblyCopyright("Copyright @  2017")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_0bf11d85736748cc88c918f84be77cc9.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_0bf11d85736748cc88c918f84be77cc9.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_0bf11d85736748cc88c918f84be77cc9.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_0bf11d85736748cc88c918f84be77cc9.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_0bf11d85736748cc88c918f84be77cc9.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_0bf11d85736748cc88c918f84be77cc9.dll]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAEY79F8AAAAAAAAAAOAAIiALATAAAFYAAAAIAAAAAAAAanUA
AAAgAAAAgAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAADAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAABh1AABPAAAAAIAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAKAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAcFUAAAAgAAAAVgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAgAAAAAYAAABYAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAKAAAAACAAAAXgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABM
dQAAAAAAAEgAAAACAAUA+D4AAGg1AAABAAAAAAAAAGB0AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBAAAAoqHgIoEQAACiqKA28SAAAKEAEEA28TAAAKMQgD
bxMAAAoQAgMWBG8UAAAKKgATMAIASgAAAAAAAAACewQAAARvpQAABgJ7BAAABANvmQAABgJ7BAAA
BARvmwAABgJ7BAAABAVvnQAABgJ7BAAABA4Eb58AAAYCewQAAAQOBW+hAAAGKkZyAQAAcHMVAAAK
A28WAAAKKhswBgBqEgAAAQAAEQJ7AgAABG+vAAAGbxcAAAoKF40gAAABJRYffJ0NH0ITBBUTBRYT
BgZvFwAAChMHBnMYAAAKEwg4ERIAAAARBRdYEwURBhdYEwYHCW8ZAAAKDAIHcg0AAHByEQAAcG8a
AAAKKAUAAAYsHSgbAAAKEwkCEQkGEQUHchMAAHAoBAAABt3HEQAACBZvHAAAChEELx0oGwAAChMK
AhEKBhEFB3JbAABwKAQAAAbdnxEAABEFFj53EQAAAnsDAAAEb5UAAAYCewMAAAQRBm8JAAAGAnsD
AAAEAggWmnKPAABwcpUAAHBvGgAACnKZAABwcpUAAHBvGgAACm8SAAAKbxcAAAog9AEAACgDAAAG
bwsAAAYCewMAAAQCCBeaco8AAHBylQAAcG8aAAAKcpkAAHBylQAAcG8aAAAKbxIAAApvFwAACiD0
AQAAKAMAAAZvDQAABgJ7AwAABAIIGJpyjwAAcHKVAABwbxoAAApymQAAcHKVAABwbxoAAApvEgAA
Cm8XAAAKIPQBAAAoAwAABm8PAAAGAnsDAAAEAggZmnKPAABwcpUAAHBvGgAACnKZAABwcpUAAHBv
GgAACm8SAAAKbxcAAAog9AEAACgDAAAGbxEAAAYCewMAAAQCCBqaco8AAHBylQAAcG8aAAAKcpkA
AHBylQAAcG8aAAAKbxIAAApvFwAACiD0AQAAKAMAAAZvEwAABgJ7AwAABAIIG5pyjwAAcHKVAABw
bxoAAApymQAAcHKVAABwbxoAAApvEgAACm8XAAAKIPQBAAAoAwAABm8VAAAGAnsDAAAEAggcmnKP
AABwcpUAAHBvGgAACnKZAABwcpUAAHBvGgAACm8SAAAKbxcAAAog9AEAACgDAAAGbxcAAAYCewMA
AAQCCB2aco8AAHBylQAAcG8aAAAKcpkAAHBylQAAcG8aAAAKbxIAAApvFwAACiD0AQAAKAMAAAZv
GQAABgJ7AwAABAIIHppyjwAAcHKVAABwbxoAAApymQAAcHKVAABwbxoAAApvEgAACm8XAAAKIPQB
AAAoAwAABm8bAAAGAnsDAAAEAggfCZpyjwAAcHKVAABwbxoAAApymQAAcHKVAABwbxoAAApvEgAA
Cm8XAAAKIPQBAAAoAwAABm8dAAAGAnsDAAAEAggfCppyjwAAcHKVAABwbxoAAApymQAAcHKVAABw
bxoAAApvEgAACm8XAAAKIPQBAAAoAwAABm8fAAAGAnsDAAAEAggfC5pyjwAAcHKVAABwbxoAAApy
mQAAcHKVAABwbxoAAApvEgAACm8XAAAKIPQBAAAoAwAABm8hAAAGAnsDAAAEAggfDJpyjwAAcHKV
AABwbxoAAApymQAAcHKVAABwbxoAAApvEgAACm8XAAAKIPQBAAAoAwAABm8jAAAGAnsDAAAEAggf
DZpyjwAAcHKVAABwbxoAAApymQAAcHKVAABwbxoAAApvEgAACm8XAAAKIPQBAAAoAwAABm8lAAAG
AnsDAAAEAggfDppyjwAAcHKVAABwbxoAAApymQAAcHKVAABwbxoAAApvEgAACm8XAAAKIPQBAAAo
AwAABm8nAAAGAnsDAAAEAggfD5pyjwAAcHKVAABwbxoAAApymQAAcHKVAABwbxoAAApvEgAACm8X
AAAKIPQBAAAoAwAABm8pAAAGAnsDAAAEAggfEJpyjwAAcHKVAABwbxoAAApymQAAcHKVAABwbxoA
AApvEgAACm8XAAAKIPQBAAAoAwAABm8rAAAGAnsDAAAEAggfEZpyjwAAcHKVAABwbxoAAApymQAA
cHKVAABwbxoAAApvEgAACm8XAAAKIPQBAAAoAwAABm8tAAAGAnsDAAAEAggfEppyjwAAcHKVAABw
bxoAAApymQAAcHKVAABwbxoAAApvEgAACm8XAAAKIPQBAAAoAwAABm8vAAAGAnsDAAAEAggfE5py
jwAAcHKVAABwbxoAAApymQAAcHKVAABwbxoAAApvEgAACm8XAAAKIPQBAAAoAwAABm8xAAAGAnsD
AAAEAggfFJpyjwAAcHKVAABwbxoAAApymQAAcHKVAABwbxoAAApvEgAACm8XAAAKIPQBAAAoAwAA
Bm8zAAAGAnsDAAAEAggfFZpyjwAAcHKVAABwbxoAAApymQAAcHKVAABwbxoAAApvEgAACm8XAAAK
IPQBAAAoAwAABm81AAAGAnsDAAAEAggfFppyjwAAcHKVAABwbxoAAApymQAAcHKVAABwbxoAAApv
EgAACm8XAAAKIPQBAAAoAwAABm83AAAGAnsDAAAEAggfF5pyjwAAcHKVAABwbxoAAApymQAAcHKV
AABwbxoAAApvEgAACm8XAAAKIPQBAAAoAwAABm85AAAGAnsDAAAEAggfGJpyjwAAcHKVAABwbxoA
AApymQAAcHKVAABwbxoAAApvEgAACm8XAAAKIPQBAAAoAwAABm87AAAGAnsDAAAEAggfGZpyjwAA
cHKVAABwbxoAAApymQAAcHKVAABwbxoAAApvEgAACm8XAAAKIPQBAAAoAwAABm89AAAGAnsDAAAE
AggfGppyjwAAcHKVAABwbxoAAApymQAAcHKVAABwbxoAAApvEgAACm8XAAAKIPQBAAAoAwAABm8/
AAAGAnsDAAAEAggfG5pyjwAAcHKVAABwbxoAAApymQAAcHKVAABwbxoAAApvEgAACm8XAAAKIPQB
AAAoAwAABm9BAAAGAnsDAAAEAggfHJpyjwAAcHKVAABwbxoAAApymQAAcHKVAABwbxoAAApvEgAA
Cm8XAAAKIPQBAAAoAwAABm9DAAAGAnsDAAAEAggfHZpyjwAAcHKVAABwbxoAAApymQAAcHKVAABw
bxoAAApvEgAACm8XAAAKIPQBAAAoAwAABm9FAAAGAnsDAAAEAggfHppyjwAAcHKVAABwbxoAAApy
mQAAcHKVAABwbxoAAApvEgAACm8XAAAKIPQBAAAoAwAABm9HAAAGAnsDAAAEAggfH5pyjwAAcHKV
AABwbxoAAApymQAAcHKVAABwbxoAAApvEgAACm8XAAAKIPQBAAAoAwAABm9JAAAGAnsDAAAEAggf
IJpyjwAAcHKVAABwbxoAAApymQAAcHKVAABwbxoAAApvEgAACm8XAAAKIPQBAAAoAwAABm9LAAAG
AnsDAAAEAggfIZpyjwAAcHKVAABwbxoAAApymQAAcHKVAABwbxoAAApvEgAACm8XAAAKIPQBAAAo
AwAABm9NAAAGAnsDAAAEAggfIppyjwAAcHKVAABwbxoAAApymQAAcHKVAABwbxoAAApvEgAACm8X
AAAKIPQBAAAoAwAABm9PAAAGAnsDAAAEAggfI5pyjwAAcHKVAABwbxoAAApymQAAcHKVAABwbxoA
AApvEgAACm8XAAAKIPQBAAAoAwAABm9RAAAGAnsDAAAEAggfJJpyjwAAcHKVAABwbxoAAApymQAA
cHKVAABwbxoAAApvEgAACm8XAAAKIPQBAAAoAwAABm9TAAAGAnsDAAAEAggfJZpyjwAAcHKVAABw
bxoAAApymQAAcHKVAABwbxoAAApvEgAACm8XAAAKIPQBAAAoAwAABm9VAAAGAnsDAAAEAggfJppy
jwAAcHKVAABwbxoAAApymQAAcHKVAABwbxoAAApvEgAACm8XAAAKIPQBAAAoAwAABm9XAAAGAnsD
AAAEAggfJ5pyjwAAcHKVAABwbxoAAApymQAAcHKVAABwbxoAAApvEgAACm8XAAAKIPQBAAAoAwAA
Bm9ZAAAGAnsDAAAEAggfKJpyjwAAcHKVAABwbxoAAApymQAAcHKVAABwbxoAAApvEgAACm8XAAAK
IPQBAAAoAwAABm9bAAAGAnsDAAAEAggfKZpyjwAAcHKVAABwbxoAAApymQAAcHKVAABwbxoAAApv
EgAACm8XAAAKIPQBAAAoAwAABm9dAAAGAnsDAAAEAggfKppyjwAAcHKVAABwbxoAAApymQAAcHKV
AABwbxoAAApvEgAACm8XAAAKIPQBAAAoAwAABm9fAAAGAnsDAAAEAggfK5pyjwAAcHKVAABwbxoA
AApymQAAcHKVAABwbxoAAApvEgAACm8XAAAKIPQBAAAoAwAABm9hAAAGAnsDAAAEAggfLJpyjwAA
cHKVAABwbxoAAApymQAAcHKVAABwbxoAAApvEgAACm8XAAAKIPQBAAAoAwAABm9jAAAGAnsDAAAE
AggfLZpyjwAAcHKVAABwbxoAAApymQAAcHKVAABwbxoAAApvEgAACm8XAAAKIPQBAAAoAwAABm9l
AAAGAnsDAAAEAggfLppyjwAAcHKVAABwbxoAAApymQAAcHKVAABwbxoAAApvEgAACm8XAAAKIPQB
AAAoAwAABm9nAAAGAnsDAAAEAggfL5pyjwAAcHKVAABwbxoAAApymQAAcHKVAABwbxoAAApvEgAA
Cm8XAAAKIPQBAAAoAwAABm9pAAAGAnsDAAAEAggfMJpyjwAAcHKVAABwbxoAAApymQAAcHKVAABw
bxoAAApvEgAACm8XAAAKIPQBAAAoAwAABm9rAAAGAnsDAAAEAggfMZpyjwAAcHKVAABwbxoAAApy
mQAAcHKVAABwbxoAAApvEgAACm8XAAAKIPQBAAAoAwAABm9tAAAGAnsDAAAEAggfMppyjwAAcHKV
AABwbxoAAApymQAAcHKVAABwbxoAAApvEgAACm8XAAAKIPQBAAAoAwAABm9vAAAGAnsDAAAEAggf
M5pyjwAAcHKVAABwbxoAAApymQAAcHKVAABwbxoAAApvEgAACm8XAAAKIPQBAAAoAwAABm9xAAAG
AnsDAAAEAggfNJpyjwAAcHKVAABwbxoAAApymQAAcHKVAABwbxoAAApvEgAACm8XAAAKIPQBAAAo
AwAABm9zAAAGAnsDAAAEAggfNZpyjwAAcHKVAABwbxoAAApymQAAcHKVAABwbxoAAApvEgAACm8X
AAAKIPQBAAAoAwAABm91AAAGAnsDAAAEAggfNppyjwAAcHKVAABwbxoAAApymQAAcHKVAABwbxoA
AApvEgAACm8XAAAKIPQBAAAoAwAABm93AAAGAnsDAAAEAggfN5pyjwAAcHKVAABwbxoAAApymQAA
cHKVAABwbxoAAApvEgAACm8XAAAKIPQBAAAoAwAABm95AAAGAnsDAAAEAggfOJpyjwAAcHKVAABw
bxoAAApymQAAcHKVAABwbxoAAApvEgAACm8XAAAKIPQBAAAoAwAABm97AAAGAnsDAAAEAggfOZpy
jwAAcHKVAABwbxoAAApymQAAcHKVAABwbxoAAApvEgAACm8XAAAKIPQBAAAoAwAABm99AAAGAnsD
AAAEAggfOppyjwAAcHKVAABwbxoAAApymQAAcHKVAABwbxoAAApvEgAACm8XAAAKIPQBAAAoAwAA
Bm9/AAAGAnsDAAAEAggfO5pyjwAAcHKVAABwbxoAAApymQAAcHKVAABwbxoAAApvEgAACm8XAAAK
IPQBAAAoAwAABm+BAAAGAnsDAAAEAggfPJpyjwAAcHKVAABwbxoAAApymQAAcHKVAABwbxoAAApv
EgAACm8XAAAKIPQBAAAoAwAABm+DAAAGAnsDAAAEAggfPZpyjwAAcHKVAABwbxoAAApymQAAcHKV
AABwbxoAAApvEgAACm8XAAAKIPQBAAAoAwAABm+FAAAGAnsDAAAEAggfPppyjwAAcHKVAABwbxoA
AApymQAAcHKVAABwbxoAAApvEgAACm8XAAAKIPQBAAAoAwAABm+HAAAGAnsDAAAEAggfP5pyjwAA
cHKVAABwbxoAAApymQAAcHKVAABwbxoAAApvEgAACm8XAAAKIPQBAAAoAwAABm+JAAAGAnsDAAAE
AggfQJpyjwAAcHKVAABwbxoAAApymQAAcHKVAABwbxoAAApvEgAACm8XAAAKIPQBAAAoAwAABm+L
AAAGAnsDAAAEAggfQZpyjwAAcHKVAABwbxoAAApymQAAcHKVAABwbxoAAApvEgAACm8XAAAKIPQB
AAAoAwAABm+NAAAGAnsDAAAEAggfQppyjwAAcHKVAABwbxoAAApymQAAcHKVAABwbxoAAApvEgAA
Cm8XAAAKIPQBAAAoAwAABm+PAAAGAnsDAAAEEQdvFwAACm+RAAAGAnsDAAAEKBsAAApvkwAABt4e
EwsoGwAAChMMAhEMBhEGBxELbxcAAAooBAAABt4AEQhvHQAACiULOuHt///eDBEILAcRCG8eAAAK
3CoAAEE0AAAAAAAAPQAAAPIRAAAvEgAAHgAAABAAAAECAAAANwAAACYSAABdEgAADAAAAAAAAAAe
AiioAAAGKioCAwQFKB8AAAoqOgIWA4wkAAABKCAAAAoqWgMsCAIWKCEAAAoqcqEAAHBzIgAACnom
AhcDKCAAAAoqWgMsCAIXKCEAAAoqcqEAAHBzIgAACnomAhgDKCAAAAoqWgMsCAIYKCEAAAoqcqEA
AHBzIgAACnomAhkDKCAAAAoqWgMsCAIZKCEAAAoqcqEAAHBzIgAACnomAhoDKCAAAAoqWgMsCAIa
KCEAAAoqcqEAAHBzIgAACnomAhsDKCAAAAoqWgMsCAIbKCEAAAoqcqEAAHBzIgAACnomAhwDKCAA
AAoqWgMsCAIcKCEAAAoqcqEAAHBzIgAACnomAh0DKCAAAAoqWgMsCAIdKCEAAAoqcqEAAHBzIgAA
CnomAh4DKCAAAAoqWgMsCAIeKCEAAAoqcqEAAHBzIgAACnoqAh8JAyggAAAKKl4DLAkCHwkoIQAA
CipyoQAAcHMiAAAKeioCHwoDKCAAAAoqXgMsCQIfCighAAAKKnKhAABwcyIAAAp6KgIfCwMoIAAA
CipeAywJAh8LKCEAAAoqcqEAAHBzIgAACnoqAh8MAyggAAAKKl4DLAkCHwwoIQAACipyoQAAcHMi
AAAKeioCHw0DKCAAAAoqXgMsCQIfDSghAAAKKnKhAABwcyIAAAp6KgIfDgMoIAAACipeAywJAh8O
KCEAAAoqcqEAAHBzIgAACnoqAh8PAyggAAAKKl4DLAkCHw8oIQAACipyoQAAcHMiAAAKeioCHxAD
KCAAAAoqXgMsCQIfECghAAAKKnKhAABwcyIAAAp6KgIfEQMoIAAACipeAywJAh8RKCEAAAoqcqEA
AHBzIgAACnoqAh8SAyggAAAKKl4DLAkCHxIoIQAACipyoQAAcHMiAAAKeioCHxMDKCAAAAoqXgMs
CQIfEyghAAAKKnKhAABwcyIAAAp6KgIfFAMoIAAACipeAywJAh8UKCEAAAoqcqEAAHBzIgAACnoq
Ah8VAyggAAAKKl4DLAkCHxUoIQAACipyoQAAcHMiAAAKeioCHxYDKCAAAAoqXgMsCQIfFighAAAK
KnKhAABwcyIAAAp6KgIfFwMoIAAACipeAywJAh8XKCEAAAoqcqEAAHBzIgAACnoqAh8YAyggAAAK
Kl4DLAkCHxgoIQAACipyoQAAcHMiAAAKeioCHxkDKCAAAAoqXgMsCQIfGSghAAAKKnKhAABwcyIA
AAp6KgIfGgMoIAAACipeAywJAh8aKCEAAAoqcqEAAHBzIgAACnoqAh8bAyggAAAKKl4DLAkCHxso
IQAACipyoQAAcHMiAAAKeioCHxwDKCAAAAoqXgMsCQIfHCghAAAKKnKhAABwcyIAAAp6KgIfHQMo
IAAACipeAywJAh8dKCEAAAoqcqEAAHBzIgAACnoqAh8eAyggAAAKKl4DLAkCHx4oIQAACipyoQAA
cHMiAAAKeioCHx8DKCAAAAoqXgMsCQIfHyghAAAKKnKhAABwcyIAAAp6KgIfIAMoIAAACipeAywJ
Ah8gKCEAAAoqcqEAAHBzIgAACnoqAh8hAyggAAAKKl4DLAkCHyEoIQAACipyoQAAcHMiAAAKeioC
HyIDKCAAAAoqXgMsCQIfIighAAAKKnKhAABwcyIAAAp6KgIfIwMoIAAACipeAywJAh8jKCEAAAoq
cqEAAHBzIgAACnoqAh8kAyggAAAKKl4DLAkCHyQoIQAACipyoQAAcHMiAAAKeioCHyUDKCAAAAoq
XgMsCQIfJSghAAAKKnKhAABwcyIAAAp6KgIfJgMoIAAACipeAywJAh8mKCEAAAoqcqEAAHBzIgAA
CnoqAh8nAyggAAAKKl4DLAkCHycoIQAACipyoQAAcHMiAAAKeioCHygDKCAAAAoqXgMsCQIfKCgh
AAAKKnKhAABwcyIAAAp6KgIfKQMoIAAACipeAywJAh8pKCEAAAoqcqEAAHBzIgAACnoqAh8qAygg
AAAKKl4DLAkCHyooIQAACipyoQAAcHMiAAAKeioCHysDKCAAAAoqXgMsCQIfKyghAAAKKnKhAABw
cyIAAAp6KgIfLAMoIAAACipeAywJAh8sKCEAAAoqcqEAAHBzIgAACnoqAh8tAyggAAAKKl4DLAkC
Hy0oIQAACipyoQAAcHMiAAAKeioCHy4DKCAAAAoqXgMsCQIfLighAAAKKnKhAABwcyIAAAp6KgIf
LwMoIAAACipeAywJAh8vKCEAAAoqcqEAAHBzIgAACnoqAh8wAyggAAAKKl4DLAkCHzAoIQAACipy
oQAAcHMiAAAKeioCHzEDKCAAAAoqXgMsCQIfMSghAAAKKnKhAABwcyIAAAp6KgIfMgMoIAAACipe
AywJAh8yKCEAAAoqcqEAAHBzIgAACnoqAh8zAyggAAAKKl4DLAkCHzMoIQAACipyoQAAcHMiAAAK
eioCHzQDKCAAAAoqXgMsCQIfNCghAAAKKnKhAABwcyIAAAp6KgIfNQMoIAAACipeAywJAh81KCEA
AAoqcqEAAHBzIgAACnoqAh82AyggAAAKKl4DLAkCHzYoIQAACipyoQAAcHMiAAAKeioCHzcDKCAA
AAoqXgMsCQIfNyghAAAKKnKhAABwcyIAAAp6KgIfOAMoIAAACipeAywJAh84KCEAAAoqcqEAAHBz
IgAACnoqAh85AyggAAAKKl4DLAkCHzkoIQAACipyoQAAcHMiAAAKeioCHzoDKCAAAAoqXgMsCQIf
OighAAAKKnKhAABwcyIAAAp6KgIfOwMoIAAACipeAywJAh87KCEAAAoqcqEAAHBzIgAACnoqAh88
AyggAAAKKl4DLAkCHzwoIQAACipyoQAAcHMiAAAKeioCHz0DKCAAAAoqXgMsCQIfPSghAAAKKnKh
AABwcyIAAAp6KgIfPgMoIAAACipeAywJAh8+KCEAAAoqcqEAAHBzIgAACnoqAh8/AyggAAAKKl4D
LAkCHz8oIQAACipyoQAAcHMiAAAKeioCH0ADKCAAAAoqXgMsCQIfQCghAAAKKnKhAABwcyIAAAp6
KgIfQQMoIAAACipeAywJAh9BKCEAAAoqcqEAAHBzIgAACnoqAh9CAyggAAAKKl4DLAkCH0IoIQAA
CipyoQAAcHMiAAAKeioCH0MDKCAAAAoqXgMsCQIfQyghAAAKKnKhAABwcyIAAAp6KgIfRAMoIAAA
CipeAywJAh9EKCEAAAoqcqEAAHBzIgAACno+Ah9FA4wOAAABKCAAAAoqXgMsCQIfRSghAAAKKnKh
AABwcyIAAAp6HgIoIwAACioeAigkAAAKKh4CKCUAAAoqOgIWA4wOAAABKCAAAAoqOgIYA4wkAAAB
KCAAAAoqOgIbA4wOAAABKCAAAAoqfgIoJgAACgICc60AAAZ9AQAABAICc64AAAZ9AgAABCoGKtYC
ewMAAAQsEgJ7AwAABG+WAAAGAhR9AwAABAJ7BAAABCwSAnsEAAAEb6YAAAYCFH0EAAAEKgAAEzAF
AHMAAAACAAARFgorWAQGlA4Ecj4BAHAoJwAACjMZAgUGmgIEBpQoKAAACg4EcwgAAAZ9AwAABAQG
lA4Eck4BAHAoJwAACjMZAgUGmgIEBpQoKAAACg4Ec5gAAAZ9BAAABAYXWAoGAzKkAm+sAAAGAm+p
AAAGAiiqAAAGKjoCKCkAAAoCA30FAAAEKjoCKCkAAAoCA30GAAAEKpYCewYAAARvKgAACnJgAQBw
bysAAAooLAAACm8tAAAKdB4AAAEqHgIoKQAACiqufgcAAAQtHnJ+AQBw0AgAAAIoLgAACm8vAAAK
czAAAAqABwAABH4HAAAEKhp+CAAABCoeAoAIAAAEKhp+CQAABCoeAigxAAAKKi5ztQAABoAJAAAE
KgAAAEJTSkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAAOgcAAAjfgAAVB0AALASAAAj
U3RyaW5ncwAAAAAEMAAA8AEAACNVUwD0MQAAEAAAACNHVUlEAAAABDIAAGQDAAAjQmxvYgAAAAAA
AAACAAABVx2iAQkDAAAA+gEzABYAAAEAAAAsAAAACgAAAE4AAAC2AAAArQAAADEAAABEAAAAEAAA
AAIAAAAFAAAAnAAAAJ0AAAABAAAABQAAAAEAAAABAAAAAADSBgEAAAAAAAYAigWcDwYAHgacDwYA
1gSJDw8AEBAAAAYAAwXMDQYAbQXMDQYATgXMDQYABQbMDQYAqgXMDQYAwwXMDQYAGgXMDQYANQVp
BgoA3gWHAwYAdQNoDQYAww4PAQYA7g1oDQYAdA1oDQoA9Q6HAw4A5g6HAwoAGQ6HAwoAeBGHAwYA
JBFoDQYAuQSJDwYAIw+8DwYADQ63DRIAeAS8BhIA6gS8BhIA+gOiDQYAngScDwYAjgZoDRIAahKq
EAYAZw5oDQYAcBJoDQYA0A4PAQYAuwJoDQYAOgBoDQYA3g1oDRYAEQAzDxYAAQAzD1cAJBIAABYA
IgAzDwYAzQNoDQYAxwJoDQYAiRLMDQAAAABkAAAAAAABAAEAAQAQAJcNAAAUAAEAAQABABAAAg8A
AEkAAQAIAAEAEAAQDwAASQABAJgAAQAQAFoRAABVAAEAqAABABAAyRAAAFkABQCtAAEAEABaEAAA
WQAGAK4AAAAQAMMPHxBZAAcAsAAAARAAiRAfEHEACQC0AAMBAABSDQAARQAKALcABgDJEBgCBgBa
EBwCBgACDyACBgAQDyQCAQBoESgCAQBoESgCEQB5DSwCEQDqAzACEQB+AjQCBgZEATgCVoCnADsC
VoBwDjsCVoALATsCVoCFDjsCVoDjATsCVoBUBDsCVoCvATsCVoCWEjsCVoCeATsCVoDOATsCVoDf
ATsCVoAWAjsCVoAyAjsCVoCbETsCVoC6ETsCVoCCADsCVoBzAjsCVoA5ATsCVoAyATsCVoDyADsC
VoBAATsCVoB2ATsCVoAiAjsCVoBXBjsCVoCzADsCVoCfAjsCVoAWBDsCVoAqBDsCVoCSDjsCVoB7
DjsCVoApATsCVoCMADsCVoAoAzsCVoB7ADsCVoCJDTsCVoCqETsCVoDpADsCVoBnATsCVoBeAjsC
VoCUADsCVoB6EjsCVoA3AzsCVoCrAjsCVoC+ADsCVoDzEDsCVoCkEjsCVoCRBDsCVoBYDjsCVoDA
AzsCVoBuBDsCVoDfDjsCVoCsAzsCVoCSAjsCVoBxADsCVoAdATsCVoBHAzsCVoBbAzsCVoACAzsC
VoBOAjsCVoA/AjsCVoBfBDsCVoCWEDsCVoD9ATsCVoASAjsCVoD5ADsCVoCMETsCVoCcDjsCVoCi
EDsCUCAAAAAAxgA8BgYAAQBYIAAAAADGAEcGBgABAGAgAAAAAIEAPRE/AgEAhCAAAAAAgQBnD0UC
AwDaIAAAAACBANUQKQAIAOwgAAAAAMYAEBEGAAkAmDMAAAAAhhhyDwYACQCgMwAAAACGGHIPXAAJ
AKszAAAAAIYI1wABAAwAujMAAAAAhgiQB08CDQDRMwAAAACGCKMAEAAOANszAAAAAIYIUwdPAg8A
8jMAAAAAhghsDhAAEAD8MwAAAACGCNcLTwIRABM0AAAAAIYIBwEQABIAHTQAAAAAhgjcB08CEwA0
NAAAAACGCIEOEAAUAD40AAAAAIYI+gtPAhUAVTQAAAAAhgi8ARAAFgBfNAAAAACGCKQITwIXAHY0
AAAAAIYIUAQQABgAgDQAAAAAhggjC08CGQCXNAAAAACGCKsBEAAaAKE0AAAAAIYIjAhPAhsAuDQA
AAAAhgiSEhAAHADCNAAAAACGCB4NTwIdANk0AAAAAIYImgEQAB4A5DQAAAAAhgh0CE8CHwD8NAAA
AACGCMoBEAAgAAc1AAAAAIYIuQhPAiEAHzUAAAAAhgjbARAAIgAqNQAAAACGCNEITwIjAEI1AAAA
AIYI7QEQACQATTUAAAAAhgjqCE8CJQBlNQAAAACGCC4CEAAmAHA1AAAAAIYIRwlPAicAiDUAAAAA
hgiXERAAKACTNQAAAACGCMQMTwIpAKs1AAAAAIYIthEQACoAtjUAAAAAhgjxDE8CKwDONQAAAACG
CH4AEAAsANk1AAAAAIYIGQdPAi0A8TUAAAAAhghvAhAALgD8NQAAAACGCJwJTwIvABQ2AAAAAIYI
NQEQADAAHzYAAAAAhggcCE8CMQA3NgAAAACGCC4BEAAyAEI2AAAAAIYIDghPAjMAWjYAAAAAhgju
ABAANABlNgAAAACGCLUHTwI1AH02AAAAAIYIPAEQADYAiDYAAAAAhggqCE8CNwCgNgAAAACGCHIB
EAA4AKs2AAAAAIYIYQhPAjkAwzYAAAAAhggeAhAAOgDONgAAAACGCDAJTwI7AOY2AAAAAIYIUwYQ
ADwA8TYAAAAAhgh4C08CPQAJNwAAAACGCK8AEAA+ABQ3AAAAAIYIZgdPAj8ALDcAAAAAhgibAhAA
QAA3NwAAAACGCMYJTwJBAE83AAAAAIYIEgQQAEIAWjcAAAAAhgjYCk8CQwByNwAAAACGCCYEEABE
AH03AAAAAIYI8wpPAkUAlTcAAAAAhgiODhAARgCgNwAAAACGCA4MTwJHALg3AAAAAIYIdw4QAEgA
wzcAAAAAhgjpC08CSQDbNwAAAACGCCUBEABKAOY3AAAAAIYI/gdPAksA/jcAAAAAhgiIABAATAAJ
OAAAAACGCCoHTwJNACE4AAAAAIYIJAMQAE4ALDgAAAAAhggoCk8CTwBEOAAAAACGCHcAEABQAE84
AAAAAIYICwdPAlEAZzgAAAAAhgiFDRAAUgByOAAAAACGCI8LTwJTAIo4AAAAAIYIphEQAFQAlTgA
AAAAhgjaDE8CVQCtOAAAAACGCOUAEABWALg4AAAAAIYIpQdPAlcA0DgAAAAAhghjARAAWADbOAAA
AACGCE4ITwJZAPM4AAAAAIYIWgIQAFoA/jgAAAAAhgiICU8CWwAWOQAAAACGCJAAEABcACE5AAAA
AIYIOQdPAl0AOTkAAAAAhgh2EhAAXgBEOQAAAACGCAgNTwJfAFw5AAAAAIYIMwMQAGAAZzkAAAAA
hgg+Ck8CYQB/OQAAAACGCKcCEABiAIo5AAAAAIYI2QlPAmMAojkAAAAAhgi6ABAAZACtOQAAAACG
CHgHTwJlAMU5AAAAAIYI7xAQAGYA0DkAAAAAhgiUDE8CZwDoOQAAAACGCKASEABoAPM5AAAAAIYI
Mw1PAmkACzoAAAAAhgiNBBAAagAWOgAAAACGCGALTwJrAC46AAAAAIYIVA4QAGwAOToAAAAAhgjB
C08CbQBROgAAAACGCLwDEABuAFw6AAAAAIYIwApPAm8AdDoAAAAAhghqBBAAcAB/OgAAAACGCEsL
TwJxAJc6AAAAAIYI2w4QAHIAojoAAAAAhghYDE8CcwC6OgAAAACGCKgDEAB0AMU6AAAAAIYIpQpP
AnUA3ToAAAAAhgiOAhAAdgDoOgAAAACGCLIJTwJ3AAA7AAAAAIYIbQAQAHgACzsAAAAAhgj6Bk8C
eQAjOwAAAACGCBkBEAB6AC47AAAAAIYI6wdPAnsARjsAAAAAhghDAxAAfABROwAAAACGCFUKTwJ9
AGk7AAAAAIYIVwMQAH4AdDsAAAAAhghwCk8CfwCMOwAAAACGCP4CEACAAJc7AAAAAIYI9AlPAoEA
rzsAAAAAhghKAhAAggC6OwAAAACGCHEJTwKDANI7AAAAAIYIOwIQAIQA3TsAAAAAhghbCU8ChQD1
OwAAAACGCFsEEACGAAA8AAAAAIYINQtPAocAGDwAAAAAhgiSEBAAiAAjPAAAAACGCH0MTwKJADs8
AAAAAIYI+QEQAIoARjwAAAAAhgj9CE8CiwBePAAAAACGCA4CEACMAGk8AAAAAIYIGQlPAo0AgTwA
AAAAhgj1ABAAjgCMPAAAAACGCMMHTwKPAKQ8AAAAAIYIiBEQAJAArzwAAAAAhgiuDE8CkQDHPAAA
AACGCJgOEACSANI8AAAAAIYIHwxPApMA6jwAAAAAhghbDxAAlAD1PAAAAACGCGoMTwKVAA09AAAA
AIYIPQRUApYAHT0AAAAAhggJC08ClwA1PQAAAACGAFwSBgCYAD09AAAAAIYALhEGAJgART0AAAAA
hgAxEWwAmACgMwAAAACGGHIPXACYAE09AAAAAIYIbANUApsAujMAAAAAhgiMCk8CnADRMwAAAACG
CBQDEACdANszAAAAAIYIEQpPAp4AXD0AAAAAhgisDgEAnwD8MwAAAACGCDoMTwKgABM0AAAAAIYI
TAEQAKEAHTQAAAAAhgg5CE8CogA0NAAAAACGCPgNEACjAD40AAAAAIYIpQtPAqQAaz0AAAAAhgg9
BFQCpQBfNAAAAACGCAkLTwKmADU9AAAAAIYAXBIGAKcAPT0AAAAAhgAuEQYApwBFPQAAAACGADER
bACnAHo9AAAAAIYYcg8GAKcAmj0AAAAAxgECEQYApwCcPQAAAACBAIYBBgCnANQ9AAAAAMYABBJa
AqcAmj0AAAAAxgEQEQYAqwBTPgAAAACGGHIPZgKrAGI+AAAAAIYYcg9mAqwAcT4AAAAAhgjrAhsA
rQCXPgAAAACDGHIPBgCtAJ8+AAAAAJMIHw9sAq0Ayz4AAAAAkwjSA3ECrQDSPgAAAACTCN4DdgKt
ANo+AAAAAJYISBF8Aq4A4T4AAAAAhhhyDwYArgDpPgAAAACRGHgPgQKuAAAAAQCDBgAAAgBUEQAA
AQArEQAAAgCUDQAAAwBvAQAABABjEgAABQB+AQAAAQBjDgAAAQAYDwAAAgBkEAAAAwAnDgAAAQBj
BgAAAQBjBgAAAQBjBgAAAQBjBgAAAQBjBgAAAQBjBgAAAQBjBgAAAQBjBgAAAQBjBgAAAQBjBgAA
AQBjBgAAAQBjBgAAAQBjBgAAAQBjBgAAAQBjBgAAAQBjBgAAAQBjBgAAAQBjBgAAAQBjBgAAAQBj
BgAAAQBjBgAAAQBjBgAAAQBjBgAAAQBjBgAAAQBjBgAAAQBjBgAAAQBjBgAAAQBjBgAAAQBjBgAA
AQBjBgAAAQBjBgAAAQBjBgAAAQBjBgAAAQBjBgAAAQBjBgAAAQBjBgAAAQBjBgAAAQBjBgAAAQBj
BgAAAQBjBgAAAQBjBgAAAQBjBgAAAQBjBgAAAQBjBgAAAQBjBgAAAQBjBgAAAQBjBgAAAQBjBgAA
AQBjBgAAAQBjBgAAAQBjBgAAAQBjBgAAAQBjBgAAAQBjBgAAAQBjBgAAAQBjBgAAAQBjBgAAAQBj
BgAAAQBjBgAAAQBjBgAAAQBjBgAAAQBjBgAAAQBjBgAAAQBjBgAAAQBjBgAAAQBjBgAAAQBjBgAA
AQBjBgAAAQBjBgAAAQBjBgAAAQBjBgAAAQBjBgAAAQBjBgAAAQBjBgAAAQBjBgAAAQBjBgAAAQBj
BgAAAQBjBgAAAQBjBgAAAQBjBgAAAQBjBgAAAQBjBgAAAQBjBgAAAQBjBgAAAQBjBgAAAQBjBgAA
AQBjBgAAAQBjBgAAAQBjBgAAAQBjBgAAAQBjBgAAAQBjBgAAAQBjBgAAAQBjBgAAAQBjBgAAAQBj
BgAAAQBjBgAAAQBjBgAAAQBjBgAAAQBjBgAAAQBjBgAAAQBjBgAAAQBjBgAAAQBjBgAAAQBjBgAA
AQBjBgAAAQBjBgAAAQBjBgAAAQBjBgAAAQBjBgAAAQBjBgAAAQBjBgAAAQBjBgAAAQBjBgAAAQBj
BgAAAQBjBgAAAQBjBgAAAQBjBgAAAQBjBgAAAQBjBgAAAQBjBgAAAQBjBgAAAQBjBgAAAQBjBgAA
AQBjBgAAAQBjBgAAAQBjBgAAAQBjBgAAAQBjBgAAAQBjBgAAAQBjBgAAAQBjBgAAAQBjBgAAAQBj
BgAAAQBjBgAAAQBjBgAAAQBjBgAAAQBjBgAAAQBjBgAAAQBjBgAAAQAYDwAAAgBkEAAAAwAnDgAA
AQBjBgAAAQBjBgAAAQBjBgAAAQBjBgAAAQBjBgAAAQBjBgAAAQBjBgAAAQBjBgAAAQBjBgAAAQBj
BgAAAQBjBgAAAQBjBgAAAQAIEQAAAgB/DwAAAwDnEAAABAAnDgAAAQB+EQAAAQB+EQAAAQBjBgkA
cg8BABEAcg8GABkAcg8KACkAcg8QADEAcg8QADkAcg8QAEEAcg8QAEkAcg8QAFEAcg8QAFkAcg8Q
AGEAcg8QAGkAcg8GALkAcg8GANkAcg8VAOkAcg8GAKkAPAYGAKkARwYGAPEAbw0bAPEApwYfAPEA
lQYjAPkAcg8QAPkAnwYpALEAjAYbAHkAcg8QAPEAQhFFAPEAZwJMAHEAVBJSAAkBsgZXABEBfgMb
ABkBNQQGAJEAcg9cAJEAXw1mAJEASg0BACkBcg8QAJEAXBIGAJEALhEGAJEAMRFsAKkAcg8GAKkA
ywB0AKkAeBB7ALEAcg8GAKkAThCBADEBVg2HAKkAPxKOADkBEBKUAFEB2QKbAFEBhRKkAMEAcg+q
AOEAcg8GAAgALADEAAgAMADJAAgANADOAAgAOADTAAgAPADYAAgAQADdAAgARADiAAgASADnAAgA
TADsAAgAUADxAAgAVAD2AAgAWAD7AAgAXAAAAQgAYAAFAQgAZAAKAQgAaAAPAQgAbAAUAQgAcAAZ
AQgAdAAeAQgAeAAjAQgAfAAoAQgAgAAtAQgAhAAyAQgAiAA3AQgAjAA8AQgAkABBAQgAlABGAQgA
mABLAQgAnABQAQgAoABVAQgApABaAQgAqABfAQgArABkAQgAsABpAQgAtABuAQgAuABzAQgAvAB4
AQgAwAB9AQgAxACCAQgAyACHAQgAzACMAQgA0ACRAQgA1ACWAQgA2ACbAQgA3ACgAQgA4AClAQgA
5ACqAQgA6ACvAQgA7AC0AQgA8AC5AQgA9AC+AQgA+ADDAQgA/ADIAQgAAAHNAQgABAHSAQgACAHX
AQgADAHcAQgAEAHhAQgAFAHmAQgAGAHrAQgAHAHwAQgAIAH1AQgAJAH6AQgAKAH/AQgALAEEAggA
MAEJAggANAEOAggAOAETAi4ACwClAi4AEwCuAi4AGwDNAi4AIwDWAi4AKwD/Ai4AMwD/Ai4AOwD/
Ai4AQwDWAi4ASwAFAy4AUwD/Ai4AWwAcA0MAYwDJAAMBawDJACEBewDJAEkTcwDNAmkTcwDNAi4A
cAADAAEABACNAAcAmQAIAJoACQCcAAAA2wCFAgAAlAeJAgAApwCNAgAAVweJAgAAcA6NAgAA2wuJ
AgAACwGNAgAA4AeJAgAAhQ6NAgAA/guJAgAA4wGNAgAA2QiJAgAAVASNAgAAJwuJAgAArwGNAgAA
kAiJAgAAlhKNAgAAIg2JAgAAngGNAgAAeAiJAgAAzgGNAgAAvQiJAgAA3wGNAgAA1QiJAgAAFgKN
AgAAIQmJAgAAMgKNAgAASwmJAgAAmxGNAgAAyAyJAgAAuhGNAgAA9QyJAgAAggCNAgAAHQeJAgAA
cwKNAgAAoAmJAgAAOQGNAgAAIAiJAgAAMgGNAgAAEgiJAgAA8gCNAgAAuQeJAgAAQAGNAgAALgiJ
AgAAdgGNAgAAZQiJAgAAIgKNAgAANAmJAgAAVwaNAgAAfAuJAgAAswCNAgAAageJAgAAnwKNAgAA
ygmJAgAAFgSNAgAA3AqJAgAAKgSNAgAA9wqJAgAAkg6NAgAAEgyJAgAAew6NAgAA7QuJAgAAKQGN
AgAAAgiJAgAAjACNAgAALgeJAgAAKAONAgAALAqJAgAAewCNAgAADweJAgAAiQ2NAgAAkwuJAgAA
qhGNAgAA3gyJAgAA6QCNAgAAqQeJAgAAZwGNAgAAUgiJAgAAXgKNAgAAjAmJAgAAlACNAgAAPQeJ
AgAAehKNAgAADA2JAgAANwONAgAAQgqJAgAAqwKNAgAA3QmJAgAAvgCNAgAAfAeJAgAA8xCNAgAA
mAyJAgAApBKNAgAANw2JAgAAkQSNAgAAZAuJAgAAWA6NAgAAxQuJAgAAwAONAgAAxAqJAgAAbgSN
AgAATwuJAgAA3w6NAgAAXAyJAgAArAONAgAAqQqJAgAAkgKNAgAAtgmJAgAAcQCNAgAA/gaJAgAA
HQGNAgAA7weJAgAARwONAgAAWQqJAgAAWwONAgAAdAqJAgAAAgONAgAA+AmJAgAATgKNAgAAdQmJ
AgAAPwKNAgAAXwmJAgAAXwSNAgAAOQuJAgAAlhCNAgAAgQyJAgAA/QGNAgAAAQmJAgAAEgKNAgAA
HQmJAgAA+QCNAgAAxweJAgAAjBGNAgAAsgyJAgAAnA6NAgAAIwyJAgAAXw+NAgAAbgyJAgAAQQSR
AgAADQuJAgAAcAORAgAAkAqJAgAAGAONAgAAFQqJAgAAsA6FAgAAPgyJAgAAUAGNAgAAPQiJAgAA
/A2NAgAAqQuJAgAAQQSRAgAADQuJAgAA7wKNAgAAIw+WAgAA8gObAgAATBGgAgEACQADAAEACgAF
AAEACwAHAAEADAAJAAEADQALAAEADgANAAEADwAPAAEAEAARAAEAEQATAAEAEgAVAAEAEwAXAAEA
FAAZAAEAFQAbAAEAFgAdAAEAFwAfAAEAGAAhAAEAGQAjAAEAGgAlAAEAGwAnAAEAHAApAAEAHQAr
AAEAHgAtAAEAHwAvAAEAIAAxAAEAIQAzAAEAIgA1AAEAIwA3AAEAJAA5AAEAJQA7AAEAJgA9AAEA
JwA/AAEAKABBAAEAKQBDAAEAKgBFAAEAKwBHAAEALABJAAEALQBLAAEALgBNAAEALwBPAAEAMABR
AAEAMQBTAAEAMgBVAAEAMwBXAAEANABZAAEANQBbAAEANgBdAAEANwBfAAEAOABhAAEAOQBjAAEA
OgBlAAEAOwBnAAEAPABpAAEAPQBrAAEAPgBtAAEAPwBvAAEAQABxAAEAQQBzAAEAQgB1AAEAQwB3
AAEARAB5AAEARQB7AAEARgB9AAEARwB/AAEASACBAAEASQCDAAEASgCFAAEASwCHAAEATACJAAEA
TQCLAAEATgCNAAEATwCPAAEAUACRAAEAUQCTAAEAUgCVAAEAUwCXAAEAVACZAAEAVQCbAAEAVgCd
AAEAVwCfAAEAWAChAAEAWQCjAAEAWgClAAEAWwCnAAEAXACpAAEAXQCrAAEAXgCtAAEAXwCvAAEA
YACxAAEAYQCzAAEAYgC1AAEAYwC3AAEAZAC5AAEAZQC7AAEAZgC9AAEAZwC/AAEAaADBAAEAaQDD
AAEAagDFAAEAawDHAAEAbADJAAEAbQDLAAEAbgDNAAEAbwDPAAEAcADRAAEAcQDTAAEAcgDVAAEA
cwDXAAEAdADZAAEAdQDbAAEAdgDdAAEAdwDfAAEAeADhAAEAeQDjAAEAegDlAAEAewDnAAEAfADp
AAEAfQDrAAEAfgDtAAEAfwDvAAEAgADxAAEAgQDzAAEAggD1AAEAgwD3AAEAhAD5AAEAhQD7AAEA
hgD9AAEAhwD/AAEAiAABAQEAiQADAQEAigAFAQEAiwAHAQEAjAAJAQEAjQALAQEAjgANAQEAjwAP
AQEAkAARAQEAkQATAQEAkgAVAQEAkwAXAQEAlAAZAQEAmQAbAQEAmgAdAQEAmwAfAQEAnAAhAQEA
nQAjAQEAngAlAQEAnwAnAQEAoAApAQEAoQArAQEAogAtAQEAowAvAQEApAAxAQIArwAzAQIAsQA1
AQIAsgA3AQEAswA3AQIAtAA5AQSAAAABAAAAAAAAAAAAAAAAAEAAAAAEAAAAAAAAAAAAAACyAFoB
AAAAAA0AAAAAAAAAAAAAALsAxhEAAAAADQAAAAAAAAAAAAAAuwDjEQAAAAAEAAAAAAAAAAAAAACy
AGgNAAAAAA0AAAAAAAAAAAAAALsAMQ4AAAAAAAAAAAEAAADNDwAACgACAAAAAElEVFNWYXJpYWJs
ZTEwMABJRFRTVmFyaWFibGVzMTAwAElEVFNFdmFsdWF0b3JDb250ZXh0MTAwAEludDMyAFNDXzBi
ZjExZDg1NzM2NzQ4Y2M4OGM5MThmODRiZTc3Y2M5ADxNb2R1bGU+AHNldF9EUkRFQQBzZXRfUkEA
c2V0X1VhbmRDAHNldF9QSUQAc2V0X05ldHdvcmtSZWltYklEAHNldF9QaGFybUlEAHNldF9QbGFu
SUQAc2V0X0NhcmRob2xkZXJJRABHZXRPdXRwdXRJRABzZXRfRmlsZVJvd0lEAHNldF9UWVBFAHNl
dF9PSQBzZXRfUHJlc2NyaWJlck5QSQBzZXRfUENOAFN5c3RlbS5JTwBzZXRfVW5pdEFXUABzZXRf
UElEUQBzZXRfQlIAc2V0X0JTAHNldF9EQVcAdmFsdWVfXwBzZXRfRXJyb3JEYXRhAG1zY29ybGli
AHNldF9SeDMwTGljAHJjAHNldF9EQVdEZXNjAEVyckRlc2MATWFya091dHB1dHNGaW5pc2hlZABz
ZXRfTkRDRGlzcGVuc2VkAHNldF9RdHlEaXNwZW5zZWQAc2V0X1N1Ym1pdHRlZABzZXRfRmVlU3Vi
bWl0dGVkAHNldF9Db3N0U3VibWl0dGVkAHNldF9GZWVQYWlkAHNldF9JbmNlbnRpdmVGZWVQYWlk
AHNldF9Qcm9mRmVlUGFpZABzZXRfUGF0aWVudFBhaWQAc2V0X0Nvc3RQYWlkAHNldF9QQ1RUYXhQ
YWlkAHNldF9GbGF0VGF4UGFpZABzZXRfQ29tcG91bmQAUmVwbGFjZQBzZXRfVG90YWxQcmljZQBk
ZWZhdWx0SW5zdGFuY2UAc2V0X1J4U291cmNlAHNldF9SZWpDb2RlAHNldF9QYXRMb2NhdGlvbkNv
ZGUASURpc3Bvc2FibGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUAZ2V0X3Zh
clN0YWdpbmdGaWxlAHNldF9QYXRpZW50TWlkZGxlTmFtZQBzZXRfRlFORmlsZU5hbWUAc2V0X0Rv
Y3Rvck5hbWUAc2V0X1BhdGllbnROYW1lAHNldF9QYXRpZW50TGFzdE5hbWUAc2V0X1BhdGllbnRG
aXJzdE5hbWUAc2V0X0Vycm9yRGF0ZVRpbWUAUmVhZExpbmUATWljcm9zb2Z0LlNxbFNlcnZlci5E
dHMuUGlwZWxpbmUAc2V0X1ByZXNjcmliZXJQaG9uZQBzZXRfUGF0aWVudFBob25lAFR5cGUAZ2V0
X0N1bHR1cmUAc2V0X0N1bHR1cmUAcmVzb3VyY2VDdWx0dXJlAEFwcGxpY2F0aW9uU2V0dGluZ3NC
YXNlAHNldF9NZXNzYWdlUmVzcG9uc2UAc2V0X1R4UmVzcG9uc2UARGlzcG9zZQBzZXRfUm93Q3Jl
YXRlZERhdGUAc2V0X1J4RGF0ZQBzZXRfUENUVGF4UmF0ZQBzZXRfQmlydGhkYXRlAEVkaXRvckJy
b3dzYWJsZVN0YXRlAHNldF9QYXRpZW50U3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUA
RGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJy
b3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJr
QXR0cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25B
dHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRp
b25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0
dHJpYnV0ZQBTU0lTU2NyaXB0Q29tcG9uZW50RW50cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJseUNv
bXBhbnlBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAUHJlRXhlY3V0ZQBQ
b3N0RXhlY3V0ZQBzZXRfR3Jvc3NBbXREdWUAdmFsdWUAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmlu
ZwBpblN0cmluZwBUb1N0cmluZwBTdWJzdHJpbmcASXNNYXRjaABnZXRfTGVuZ3RoAEdldExlbmd0
aABTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU0NfMGJmMTFkODU3MzY3NDhjYzg4YzkxOGY4NGJlNzdj
YzkuZGxsAHNldF9EUkRFQV9Jc051bGwAc2V0X1JBX0lzTnVsbABzZXRfVWFuZENfSXNOdWxsAHNl
dF9QSURfSXNOdWxsAHNldF9OZXR3b3JrUmVpbWJJRF9Jc051bGwAc2V0X1BoYXJtSURfSXNOdWxs
AHNldF9QbGFuSURfSXNOdWxsAHNldF9DYXJkaG9sZGVySURfSXNOdWxsAHNldF9GaWxlUm93SURf
SXNOdWxsAHNldF9UWVBFX0lzTnVsbABzZXRfT0lfSXNOdWxsAHNldF9QcmVzY3JpYmVyTlBJX0lz
TnVsbABzZXRfUENOX0lzTnVsbABzZXRfVW5pdEFXUF9Jc051bGwAc2V0X1BJRFFfSXNOdWxsAHNl
dF9CUl9Jc051bGwAc2V0X0JTX0lzTnVsbABzZXRfREFXX0lzTnVsbABzZXRfRXJyb3JEYXRhX0lz
TnVsbABzZXRfUngzMExpY19Jc051bGwAc2V0X0RBV0Rlc2NfSXNOdWxsAHNldF9ORENEaXNwZW5z
ZWRfSXNOdWxsAHNldF9RdHlEaXNwZW5zZWRfSXNOdWxsAHNldF9TdWJtaXR0ZWRfSXNOdWxsAHNl
dF9GZWVTdWJtaXR0ZWRfSXNOdWxsAHNldF9Db3N0U3VibWl0dGVkX0lzTnVsbABzZXRfRmVlUGFp
ZF9Jc051bGwAc2V0X0luY2VudGl2ZUZlZVBhaWRfSXNOdWxsAHNldF9Qcm9mRmVlUGFpZF9Jc051
bGwAc2V0X1BhdGllbnRQYWlkX0lzTnVsbABzZXRfQ29zdFBhaWRfSXNOdWxsAHNldF9QQ1RUYXhQ
YWlkX0lzTnVsbABzZXRfRmxhdFRheFBhaWRfSXNOdWxsAHNldF9Db21wb3VuZF9Jc051bGwAc2V0
X1RvdGFsUHJpY2VfSXNOdWxsAHNldF9SeFNvdXJjZV9Jc051bGwAc2V0X1JlakNvZGVfSXNOdWxs
AHNldF9QYXRMb2NhdGlvbkNvZGVfSXNOdWxsAHNldF9QYXRpZW50TWlkZGxlTmFtZV9Jc051bGwA
c2V0X0ZRTkZpbGVOYW1lX0lzTnVsbABzZXRfRG9jdG9yTmFtZV9Jc051bGwAc2V0X1BhdGllbnRO
YW1lX0lzTnVsbABzZXRfUGF0aWVudExhc3ROYW1lX0lzTnVsbABzZXRfUGF0aWVudEZpcnN0TmFt
ZV9Jc051bGwAc2V0X0Vycm9yRGF0ZVRpbWVfSXNOdWxsAHNldF9QcmVzY3JpYmVyUGhvbmVfSXNO
dWxsAHNldF9QYXRpZW50UGhvbmVfSXNOdWxsAHNldF9NZXNzYWdlUmVzcG9uc2VfSXNOdWxsAHNl
dF9UeFJlc3BvbnNlX0lzTnVsbABzZXRfUm93Q3JlYXRlZERhdGVfSXNOdWxsAHNldF9SeERhdGVf
SXNOdWxsAHNldF9QQ1RUYXhSYXRlX0lzTnVsbABzZXRfQmlydGhkYXRlX0lzTnVsbABzZXRfUGF0
aWVudFN0YXRlX0lzTnVsbABzZXRfR3Jvc3NBbXREdWVfSXNOdWxsAHNldF9ORENXcml0dGVuX0lz
TnVsbABzZXRfRXJyb3JEZXNjcmlwdGlvbl9Jc051bGwAc2V0X1BhdGllbnRaaXBfSXNOdWxsAHNl
dF9CSU5OYnJfSXNOdWxsAHNldF9SZk5icl9Jc051bGwAc2V0X0dyb3VwTmJyX0lzTnVsbABzZXRf
UnhOYnJfSXNOdWxsAHNldF9DbGFpbUF1dGhOdW1iZXJfSXNOdWxsAHNldF9GaWxlRXJyb3JSb3dO
dW1iZXJfSXNOdWxsAHNldF9HZW5kZXJfSXNOdWxsAHNldF9GaWxlRGlyX0lzTnVsbABzZXRfUENU
VGF4QmFzaXNfSXNOdWxsAHNldF9QYXRpZW50QWRkcmVzc19Jc051bGwAc2V0X1J4RGlzY291bnRf
SXNOdWxsAHNldF9QbGFuQW1vdW50X0lzTnVsbABzZXRfT3RoZXJBbW91bnRfSXNOdWxsAHNldF9D
b1BheUFtb3VudF9Jc051bGwAc2V0X1BhdGllbnRLZXlfSXNOdWxsAHNldF9EYXlTdXBwbHlfSXNO
dWxsAHNldF9QYXRpZW50Q2l0eV9Jc051bGwAU2V0TnVsbABjb2wAZ2V0X0l0ZW0Ac2V0X0l0ZW0A
U3lzdGVtAFRyaW0ARW51bQByZXNvdXJjZU1hbgBzZXRfTkRDV3JpdHRlbgBmbgBTY3JpcHRNYWlu
AFN5c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5c3RlbS5SZWZsZWN0
aW9uAEludmFsaWRPcGVyYXRpb25FeGNlcHRpb24Ac2V0X0Vycm9yRGVzY3JpcHRpb24AQ3VsdHVy
ZUluZm8AT3V0cHV0TmFtZU1hcABPdXRwdXRNYXAATWljcm9zb2Z0LlNxbFNlcnZlci5EVFNSdW50
aW1lV3JhcABzZXRfUGF0aWVudFppcABpbnAAQ2hhcgBzZXRfQklOTmJyAHNldF9SZk5icgBzZXRf
R3JvdXBOYnIAc2V0X1J4TmJyAHNldF9DbGFpbUF1dGhOdW1iZXIAc2V0X0ZpbGVFcnJvclJvd051
bWJlcgBTdHJlYW1SZWFkZXIAVGV4dFJlYWRlcgBzZXRfR2VuZGVyAFBpcGVsaW5lQnVmZmVyAFNj
cmlwdEJ1ZmZlcgBSeDMwT3V0QnVmZmVyAEVycm9yT3V0QnVmZmVyAGdldF9SZXNvdXJjZU1hbmFn
ZXIATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZS5XcmFwcGVyAHNldF9GaWxlRGlyAFdy
aXRlRXJyb3IALmN0b3IALmNjdG9yAE91dHB1dElEcwBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVt
LlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNDXzBiZjExZDg1NzM2
NzQ4Y2M4OGM5MThmODRiZTc3Y2M5LlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1
Z2dpbmdNb2RlcwBTQ18wYmYxMWQ4NTczNjc0OGNjODhjOTE4Zjg0YmU3N2NjOS5Qcm9wZXJ0aWVz
AGdldF9SZWFkT25seVZhcmlhYmxlcwBCdWZmZXJDb2x1bW5JbmRleGVzAEdldENvbHVtbkluZGV4
ZXMAU2V0dGluZ3MAc2V0X1BDVFRheEJhc2lzAE1heENvbHMAU3lzdGVtLlRleHQuUmVndWxhckV4
cHJlc3Npb25zAENvbm5lY3Rpb25zAE5vblByaW50YWJsZUNoYXJzAEJ1ZmZlcnMAc2V0X1BhdGll
bnRBZGRyZXNzAEZpbmlzaE91dHB1dHMAQ3JlYXRlTmV3T3V0cHV0Um93cwBPYmplY3QAZHQAU2V0
RW5kT2ZSb3dzZXQAbGVmdABTcGxpdABnZXRfRGVmYXVsdABpbkludABVc2VyQ29tcG9uZW50AFBh
cmVudENvbXBvbmVudABTY3JpcHRDb21wb25lbnQAc2V0X1J4RGlzY291bnQAc2V0X1BsYW5BbW91
bnQAc2V0X090aGVyQW1vdW50AHNldF9Db1BheUFtb3VudABNaWNyb3NvZnQuU3FsU2VydmVyLlR4
U2NyaXB0AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuUGlwZWxpbmVIb3N0AFByaW1lT3V0cHV0AEdldFZh
bHVlV2l0aENvbnRleHQAU2NyaXB0Q29tcG9uZW50RXZhbENvbnRleHQAZ2V0X0V2YWx1YXRvckNv
bnRleHQAZ2V0X05vdwBBZGRSb3cARXJyUm93AFJlZ2V4AEFycmF5AHNldF9QYXRpZW50S2V5AGdl
dF9Bc3NlbWJseQBzZXRfRGF5U3VwcGx5AHNldF9QYXRpZW50Q2l0eQAAC1sAAAAtAB8AXQABAwkA
AAEAR04AbwBuAHAAcgBpAG4AdABhAGIAbABlACAAZABhAHQAYQAgAGYAbwB1AG4AZAAgAGkAbgAg
AHQAaABlACAAcgBvAHcALgAAM04AbwB0ACAAZQBuAG8AdQBnAGgAIABjAG8AbAB1AG0AbgBzACAA
aQBuACAAcgBvAHcAAAUgACAAAAMgAAAHIAAgACAAAICbSQBzAE4AdQBsAGwAIABwAHIAbwBwAGUA
cgB0AHkAIABjAGEAbgBuAG8AdAAgAGIAZQAgAHMAZQB0ACAAdABvACAARgBhAGwAcwBlAC4AIABB
AHMAcwBpAGcAbgAgAGEAIAB2AGEAbAB1AGUAIAB0AG8AIAB0AGgAZQAgAGMAbwBsAHUAbQBuACAA
aQBuAHMAdABlAGEAZAAuAAAPUgB4ADMAMABPAHUAdAAAEUUAcgByAG8AcgBPAHUAdAAAHXYAYQBy
AFMAdABhAGcAaQBuAGcARgBpAGwAZQAAcVMAQwBfADAAYgBmADEAMQBkADgANQA3ADMANgA3ADQA
OABjAGMAOAA4AGMAOQAxADgAZgA4ADQAYgBlADcANwBjAGMAOQAuAFAAcgBvAHAAZQByAHQAaQBl
AHMALgBSAGUAcwBvAHUAcgBjAGUAcwAA0IOnnrds1Ey6GqRZLNX8+QAEIAEBCAMgAAEFIAEBEREE
IAEBDgUgAQERaQMgAA4DIAAIBSACDggIBCABAg4WBw0ODh0OHQMICAgOEj0RORE5EkEROQYgAR0O
HQMFIAIODg4EAAAROQQgAQgICSADARJNHQgSUQUgAgEIHAMgAAIDBwEIBgACCBJRDgUgAR0ICAUg
ABKAmQYgARKAnRwFAAASgKEGIAEcEoClCAABEoCpEYCtBSAAEoCxByACAQ4SgLEIt3pcVhk04IkI
iYRdzYCAzJEEAAAAAAQBAAAABAIAAAAEAwAAAAQEAAAABAUAAAAEBgAAAAQHAAAABAgAAAAECQAA
AAQKAAAABAsAAAAEDAAAAAQNAAAABA4AAAAEDwAAAAQQAAAABBEAAAAEEgAAAAQTAAAABBQAAAAE
FQAAAAQWAAAABBcAAAAEGAAAAAQZAAAABBoAAAAEGwAAAAQcAAAABB0AAAAEHgAAAAQfAAAABCAA
AAAEIQAAAAQiAAAABCMAAAAEJAAAAAQlAAAABCYAAAAEJwAAAAQoAAAABCkAAAAEKgAAAAQrAAAA
BCwAAAAELQAAAAQuAAAABC8AAAAEMAAAAAQxAAAABDIAAAAEMwAAAAQ0AAAABDUAAAAENgAAAAQ3
AAAABDgAAAAEOQAAAAQ6AAAABDsAAAAEPAAAAAQ9AAAABD4AAAAEPwAAAARAAAAABEEAAAAEQgAA
AARDAAAAAwYSGAMGEhwDBhIMAwYSEAMGElUDBhJhAwYSZQMGEiQCBggDBhEoBSACDg4ICSAFARE5
DggODgQgAQECBSABARE5CyAEAQgdCB0STRJRBSABARJVBAAAEmEEAAASZQUAAQESZQQAABIkAwAA
AQMoAAgDKAACAygADgQoABE5BAgAEmEECAASZQQIABIkCAEACAAAAAAAHgEAAQBUAhZXcmFwTm9u
RXhjZXB0aW9uVGhyb3dzAQgBAAIAAAAAACgBACNTQ18wYmYxMWQ4NTczNjc0OGNjODhjOTE4Zjg0
YmU3N2NjOQAABQEAAAAAFgEAEUNvcHlyaWdodCBAICAyMDE3AABHAQAaLk5FVEZyYW1ld29yayxW
ZXJzaW9uPXY0LjABAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEC5ORVQgRnJhbWV3b3JrIDS0AAAA
zsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBW
ZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYx
OTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBB
RFBBRFC0AAAAQHUAAAAAAAAAAAAAWnUAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEx1AAAAAAAA
AAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAA
MAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFiAAADsAwAAAAAAAAAAAADsAzQAAABWAFMAXwBW
AEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv/gAAAQAAAAEAAAAAAAAAAQAAAAAAPwAAAAAA
AAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAE
AAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAAALAETAMAAAEAUwB0AHIAaQBuAGcARgBpAGwA
ZQBJAG4AZgBvAAAAKAMAAAEAMAAwADAAMAAwADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABz
AAAAAAAAACIAAQABAEMAbwBtAHAAYQBuAHkATgBhAG0AZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUA
RABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAEMAXwAwAGIAZgAxADEAZAA4ADUANwAzADYANwA0
ADgAYwBjADgAOABjADkAMQA4AGYAOAA0AGIAZQA3ADcAYwBjADkAAAAwAAgAAQBGAGkAbABlAFYA
ZQByAHMAaQBvAG4AAAAAADEALgAwAC4AMAAuADAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBh
AG0AZQAAAFMAQwBfADAAYgBmADEAMQBkADgANQA3ADMANgA3ADQAOABjAGMAOAA4AGMAOQAxADgA
ZgA4ADQAYgBlADcANwBjAGMAOQAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBp
AGcAaAB0AAAAQwBvAHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAAMQA3AAAAKgABAAEATABlAGcA
YQBsAFQAcgBhAGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBp
AGwAZQBuAGEAbQBlAAAAUwBDAF8AMABiAGYAMQAxAGQAOAA1ADcAMwA2ADcANAA4AGMAYwA4ADgA
YwA5ADEAOABmADgANABiAGUANwA3AGMAYwA5AC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0
AE4AYQBtAGUAAAAAAFMAQwBfADAAYgBmADEAMQBkADgANQA3ADMANgA3ADQAOABjAGMAOAA4AGMA
OQAxADgAZgA4ADQAYgBlADcANwBjAGMAOQAAADQACAABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBp
AG8AbgAAADEALgAwAC4AMAAuADAAAAA4AAgAAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkA
bwBuAAAAMQAuADAALgAwAC4AMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAABwAAAMAAAAbDUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAA]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_0bf11d85736748cc88c918f84be77cc9</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg">User::varStagingFile</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum"
                      typeConverter="NOTBROWSABLE">1a47d9f91a1a40ecf2d4220eee30c2ca</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataShaChecksum"
                      typeConverter="NOTBROWSABLE">8e39b66f61f8be7171b5b19653c7b782419a2f0a</property>
                  </properties>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out]"
                      hasSideEffects="true"
                      name="Rx30Out">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[FileRowID]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[FileRowID]"
                          name="FileRowID" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[PharmID]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[PharmID]"
                          name="PharmID" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[BINNbr]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[BINNbr]"
                          name="BINNbr" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[PCN]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[PCN]"
                          name="PCN" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[GroupNbr]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[GroupNbr]"
                          name="GroupNbr" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[Submitted]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[Submitted]"
                          name="Submitted" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[RxDate]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[RxDate]"
                          name="RxDate" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[QtyDispensed]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[QtyDispensed]"
                          name="QtyDispensed" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[DaySupply]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[DaySupply]"
                          name="DaySupply" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[NDCDispensed]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[NDCDispensed]"
                          name="NDCDispensed" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[FeeSubmitted]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[FeeSubmitted]"
                          name="FeeSubmitted" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[CostSubmitted]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[CostSubmitted]"
                          name="CostSubmitted" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[FeePaid]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[FeePaid]"
                          name="FeePaid" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[CostPaid]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[CostPaid]"
                          name="CostPaid" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[PlanAmount]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[PlanAmount]"
                          name="PlanAmount" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[CoPayAmount]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[CoPayAmount]"
                          name="CoPayAmount" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[UandC]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[UandC]"
                          name="UandC" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[TotalPrice]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[TotalPrice]"
                          name="TotalPrice" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[BS]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[BS]"
                          name="BS" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[BR]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[BR]"
                          name="BR" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[OI]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[OI]"
                          name="OI" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[DAW]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[DAW]"
                          name="DAW" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[DAWDesc]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[DAWDesc]"
                          name="DAWDesc" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[PatientPaid]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[PatientPaid]"
                          name="PatientPaid" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[GrossAmtDue]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[GrossAmtDue]"
                          name="GrossAmtDue" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[PlanID]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[PlanID]"
                          name="PlanID" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[RejCode]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[RejCode]"
                          name="RejCode" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[MessageResponse]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[MessageResponse]"
                          name="MessageResponse" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[TxResponse]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[TxResponse]"
                          name="TxResponse" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[RxNbr]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[RxNbr]"
                          name="RxNbr" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[RfNbr]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[RfNbr]"
                          name="RfNbr" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[PIDQ]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[PIDQ]"
                          name="PIDQ" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[PID]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[PID]"
                          name="PID" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[DoctorName]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[DoctorName]"
                          name="DoctorName" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[RA]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[RA]"
                          name="RA" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[NDCWritten]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[NDCWritten]"
                          name="NDCWritten" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[OtherAmount]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[OtherAmount]"
                          name="OtherAmount" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[TYPE]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[TYPE]"
                          name="TYPE" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[Rx30Lic]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[Rx30Lic]"
                          name="Rx30Lic" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[Compound]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[Compound]"
                          name="Compound" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[NetworkReimbID]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[NetworkReimbID]"
                          name="NetworkReimbID" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[PatientKey]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[PatientKey]"
                          name="PatientKey" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[PatientName]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[PatientName]"
                          name="PatientName" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[PatLocationCode]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[PatLocationCode]"
                          name="PatLocationCode" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[CardholderID]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[CardholderID]"
                          name="CardholderID" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[PatientAddress]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[PatientAddress]"
                          name="PatientAddress" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[PatientCity]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[PatientCity]"
                          name="PatientCity" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[PatientState]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[PatientState]"
                          name="PatientState" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[PatientZip]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[PatientZip]"
                          name="PatientZip" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[PatientPhone]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[PatientPhone]"
                          name="PatientPhone" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[Birthdate]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[Birthdate]"
                          name="Birthdate" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[Gender]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[Gender]"
                          name="Gender" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[PrescriberPhone]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[PrescriberPhone]"
                          name="PrescriberPhone" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[RxSource]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[RxSource]"
                          name="RxSource" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[DRDEA]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[DRDEA]"
                          name="DRDEA" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[UnitAWP]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[UnitAWP]"
                          name="UnitAWP" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[PatientLastName]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[PatientLastName]"
                          name="PatientLastName" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[PatientFirstName]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[PatientFirstName]"
                          name="PatientFirstName" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[PatientMiddleName]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[PatientMiddleName]"
                          name="PatientMiddleName" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[FlatTaxPaid]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[FlatTaxPaid]"
                          name="FlatTaxPaid" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[PCTTaxPaid]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[PCTTaxPaid]"
                          name="PCTTaxPaid" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[PCTTaxRate]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[PCTTaxRate]"
                          name="PCTTaxRate" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[PCTTaxBasis]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[PCTTaxBasis]"
                          name="PCTTaxBasis" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[IncentiveFeePaid]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[IncentiveFeePaid]"
                          name="IncentiveFeePaid" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[ProfFeePaid]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[ProfFeePaid]"
                          name="ProfFeePaid" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[PrescriberNPI]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[PrescriberNPI]"
                          name="PrescriberNPI" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[RxDiscount]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[RxDiscount]"
                          name="RxDiscount" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[ClaimAuthNumber]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[ClaimAuthNumber]"
                          name="ClaimAuthNumber" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[FileDir]"
                          codePage="1252"
                          dataType="str"
                          length="1000"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[FileDir]"
                          name="FileDir" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[RowCreatedDate]"
                          dataType="dbTimeStamp"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out].Columns[RowCreatedDate]"
                          name="RowCreatedDate" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[ErrorOut]"
                      hasSideEffects="true"
                      name="ErrorOut">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[ErrorOut].Columns[ErrorDateTime]"
                          dataType="dbTimeStamp"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[ErrorOut].Columns[ErrorDateTime]"
                          name="ErrorDateTime" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[ErrorOut].Columns[FQNFileName]"
                          codePage="1252"
                          dataType="str"
                          length="1000"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[ErrorOut].Columns[FQNFileName]"
                          name="FQNFileName" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[ErrorOut].Columns[FileErrorRowNumber]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[ErrorOut].Columns[FileErrorRowNumber]"
                          name="FileErrorRowNumber" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[ErrorOut].Columns[ErrorData]"
                          codePage="1252"
                          dataType="str"
                          length="8000"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[ErrorOut].Columns[ErrorData]"
                          name="ErrorData" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[ErrorOut].Columns[ErrorDescription]"
                          codePage="1252"
                          dataType="str"
                          length="8000"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[ErrorOut].Columns[ErrorDescription]"
                          name="ErrorDescription" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[ErrorOut].Columns[RowCreatedDate]"
                          dataType="dbTimeStamp"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[ErrorOut].Columns[RowCreatedDate]"
                          name="RowCreatedDate" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Foreach Loop Container\Data Flow Task.Paths[ErrorOut]"
                  endId="Package\Foreach Loop Container\Data Flow Task\ErrorOut.Inputs[OLE DB Destination Input]"
                  name="ErrorOut"
                  startId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[ErrorOut]" />
                <path
                  refId="Package\Foreach Loop Container\Data Flow Task.Paths[Rx30Out]"
                  endId="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination.Inputs[OLE DB Destination Input]"
                  name="Rx30Out"
                  startId="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile.Outputs[Rx30Out]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:ForEachVariableMappings>
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{EB648943-2F39-4DC2-9F17-B9ECB4ABD1B2}"
          DTS:ObjectName="{EB648943-2F39-4DC2-9F17-B9ECB4ABD1B2}"
          DTS:ValueIndex="0"
          DTS:VariableName="User::varStagingFile" />
      </DTS:ForEachVariableMappings>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="222,42"
          Id="Package\Foreach Loop Container\Data Flow Task"
          TopLeft="5.5,5.5" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="233,102"
          Size="233,145"
          Id="Package\Foreach Loop Container"
          TopLeft="257,106" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Foreach Loop Container\Data Flow Task">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="171,42"
          Id="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination"
          TopLeft="502,161" />
        <NodeLayout
          Size="119,42"
          Id="Package\Foreach Loop Container\Data Flow Task\ErrorOut"
          TopLeft="269,163" />
        <NodeLayout
          Size="138,42"
          Id="Package\Foreach Loop Container\Data Flow Task\ParseFlatFile"
          TopLeft="404,68" />
        <EdgeLayout
          Id="Package\Foreach Loop Container\Data Flow Task.Paths[Rx30Out]"
          TopLeft="494.666666666667,110">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="92.8333333333334,51"
              Start="0,0"
              End="92.8333333333334,43.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,16.7507163323782" />
                  <mssgle:CubicBezierSegment
                    Point1="0,16.7507163323782"
                    Point2="0,20.7507163323782"
                    Point3="4,20.7507163323782" />
                  <mssgle:LineSegment
                    End="88.8333333333334,20.7507163323782" />
                  <mssgle:CubicBezierSegment
                    Point1="88.8333333333334,20.7507163323782"
                    Point2="92.8333333333334,20.7507163323782"
                    Point3="92.8333333333334,24.7507163323782" />
                  <mssgle:LineSegment
                    End="92.8333333333334,43.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="26.7502799479167,25.7507163323782,39.3327734375,9.5732421875"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Data Flow Task.Paths[ErrorOut]"
          TopLeft="473,110">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-144.5,53"
              Start="0,0"
              End="-144.5,45.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,22.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,22.5"
                    Point2="0,26.5"
                    Point3="-4,26.5" />
                  <mssgle:LineSegment
                    End="-140.5,26.5" />
                  <mssgle:CubicBezierSegment
                    Point1="-140.5,26.5"
                    Point2="-144.5,26.5"
                    Point3="-144.5,30.5" />
                  <mssgle:LineSegment
                    End="-144.5,45.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-91.79638671875,31.5,39.0927734375,9.5732421875"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Loop Container\Data Flow Task\OLE DB Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Loop Container\Data Flow Task\ErrorOut">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>